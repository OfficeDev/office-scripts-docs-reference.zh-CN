### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Comment:interface'
    summary: 代表工作簿中的注释。
    name: Excel.Comment
    fullName: Excel.Comment
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Comment#authorEmail:member'
      - 'excel!Excel.Comment#authorName:member'
      - 'excel!Excel.Comment#content:member'
      - 'excel!Excel.Comment#creationDate:member'
      - 'excel!Excel.Comment#delete:member(1)'
      - 'excel!Excel.Comment#getLocation:member(1)'
      - 'excel!Excel.Comment#id:member'
      - 'excel!Excel.Comment#load:member(1)'
      - 'excel!Excel.Comment#mentions:member'
      - 'excel!Excel.Comment#replies:member'
      - 'excel!Excel.Comment#resolved:member'
      - 'excel!Excel.Comment#richContent:member'
      - 'excel!Excel.Comment#updateMentions:member(1)'
  - uid: 'excel!Excel.Comment#authorEmail:member'
    summary: 获取批注作者的电子邮件。
    name: authorEmail
    fullName: authorEmail
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorEmail: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#authorName:member'
    summary: 获取批注作者的姓名。
    name: authorName
    fullName: authorName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorName: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#content:member'
    summary: 批注的内容。 字符串为纯文本。
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Comments");
              let comment = sheet.comments.getItemAt(0);
              comment.content = "PLEASE add headers here.";
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Comment#creationDate:member'
    summary: 获取批注的创建时间。 如果批注是从备注转换而来的，则返回 null，因为批注没有创建日期。
    name: creationDate
    fullName: creationDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly creationDate: Date;'
      return:
        type:
          - '!Date:interface'
  - uid: 'excel!Excel.Comment#delete:member(1)'
    summary: 删除批注和所有连接的答复。
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              context.workbook.comments.getItemByCell("Comments!A2").delete();
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Comment#getLocation:member(1)'
    summary: 获取此注释所在的单元格。
    name: getLocation()
    fullName: getLocation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocation(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.Comment#id:member'
    summary: 指定注释标识符。
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在 `context.sync()` 读取属性之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Comment#mentions:member'
    summary: 获取注释中提到的实体（例如，人员）。
    name: mentions
    fullName: mentions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly mentions: CommentMention[];'
      return:
        type:
          - 'excel!Excel.Comment#mentions~0:complex'
  - uid: 'excel!Excel.Comment#replies:member'
    summary: 表示与批注关联的回复对象的集合。
    name: replies
    fullName: replies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly replies: CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:interface'
  - uid: 'excel!Excel.Comment#resolved:member'
    summary: 注释线程状态。 值为 "true" 表示解析注释线程。
    name: resolved
    fullName: resolved
    langs:
      - typeScript
    type: property
    syntax:
      content: 'resolved: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Comment#richContent:member'
    summary: 获取丰富的注释内容（例如，注释中的提到）。 此字符串不应显示给最终用户。 您的外接程序应仅使用此信息分析丰富的注释内容。
    name: richContent
    fullName: richContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly richContent: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#updateMentions:member(1)'
    summary: 使用特殊格式的字符串和提及列表更新注释内容。
    name: updateMentions(contentWithMentions)
    fullName: updateMentions(contentWithMentions)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'updateMentions(contentWithMentions: CommentRichContent): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: contentWithMentions
          description: 批注的内容。 这包含一个特殊格式的字符串和在 Excel 显示时将解析为字符串的提及的列表。
          type:
            - 'excel!Excel.CommentRichContent:interface'
references:
  - uid: '!Date:interface'
    name: Date
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.Comment#mentions~0:complex'
    name: 'CommentMention[]'
    fullName: 'Excel.CommentMention[]'
    spec.typeScript:
      - uid: 'excel!Excel.CommentMention:interface'
        name: CommentMention
        fullName: Excel.CommentMention
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentReplyCollection:interface'
    name: CommentReplyCollection
    fullName: Excel.CommentReplyCollection
  - uid: 'excel!Excel.CommentRichContent:interface'
    name: CommentRichContent
    fullName: Excel.CommentRichContent