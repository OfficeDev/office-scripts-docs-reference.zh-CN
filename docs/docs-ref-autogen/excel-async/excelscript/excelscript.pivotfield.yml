### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotField:interface'
    summary: 表示 Excel 透视字段。
    name: Excel.PivotField
    fullName: Excel.PivotField
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.PivotField#id:member'
      - 'excel!Excel.PivotField#items:member'
      - 'excel!Excel.PivotField#load:member(1)'
      - 'excel!Excel.PivotField#name:member'
      - 'excel!Excel.PivotField#showAllItems:member'
      - 'excel!Excel.PivotField#sortByLabels:member(1)'
      - 'excel!Excel.PivotField#sortByValues:member(1)'
      - 'excel!Excel.PivotField#subtotals:member'
  - uid: 'excel!Excel.PivotField#id:member'
    summary: PivotField 的 ID。
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotField#items:member'
    summary: 返回与 PivotField 相关联的 PivotFields。
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: PivotItemCollection;'
      return:
        type:
          - 'excel!Excel.PivotItemCollection:interface'
  - uid: 'excel!Excel.PivotField#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在 `context.sync()` 读取属性之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotField#name:member'
    summary: PivotField 的名称。
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotField#showAllItems:member'
    summary: 确定是否显示 PivotField 的所有项。
    name: showAllItems
    fullName: showAllItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAllItems: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotField#sortByLabels:member(1)'
    summary: PivotField 排序。 如果指定 DataPivotHierarchy，则会基于它进行排序，如果未指定，则会基于 PivotField 本身进行排序。
    name: sortByLabels(sortBy)
    fullName: sortByLabels(sortBy)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByLabels(sortBy: SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: 指定是按升序还是降序进行排序。
          type:
            - 'excel!Excel.SortBy:enum'
  - uid: 'excel!Excel.PivotField#sortByValues:member(1)'
    summary: 按给定范围中的指定值对 PivotField 进行排序。 作用域定义在具有相同 DataPivotHierarchy 中的多个值时，将使用哪些特定值进行排序。
    name: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        sortByValues(
                    sortBy: SortBy,
                    valuesHierarchy: DataPivotHierarchy,
                    pivotItemScope?: Array<PivotItem | string>
                ): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: 指定是按升序还是降序进行排序。
          type:
            - 'excel!Excel.SortBy:enum'
        - id: valuesHierarchy
          description: 指定要用于排序的数据轴上的值层次结构。
          type:
            - 'excel!Excel.DataPivotHierarchy:interface'
        - id: pivotItemScope
          description: 应在排序范围中使用的项。 这些项目将构成要作为排序依据的行或列。 如果使用字符串而不是 PivotItem，则该字符串表示 PivotItem 的 ID。 如果您要对其进行排序的轴上没有数据层次结构以外的任何项目，则可以为空。
          type:
            - 'excel!Excel.PivotField#sortByValues~0:complex'
  - uid: 'excel!Excel.PivotField#subtotals:member'
    summary: PivotField 小计。
    name: subtotals
    fullName: subtotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotals: Subtotals;'
      return:
        type:
          - 'excel!Excel.Subtotals:interface'
references:
  - uid: 'excel!Excel.PivotItemCollection:interface'
    name: PivotItemCollection
    fullName: Excel.PivotItemCollection
  - uid: 'excel!Excel.SortBy:enum'
    name: SortBy
    fullName: Excel.SortBy
  - uid: 'excel!Excel.DataPivotHierarchy:interface'
    name: DataPivotHierarchy
    fullName: Excel.DataPivotHierarchy
  - uid: 'excel!Excel.PivotField#sortByValues~0:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:interface'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: |2-
           | string>
                  
        fullName: |2-
           | string>
                  
  - uid: 'excel!Excel.Subtotals:interface'
    name: Subtotals
    fullName: Excel.Subtotals