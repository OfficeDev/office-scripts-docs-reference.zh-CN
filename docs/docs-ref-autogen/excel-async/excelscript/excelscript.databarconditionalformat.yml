### YamlMime:TSType
name: Excel.DataBarConditionalFormat
uid: excel!Excel.DataBarConditionalFormat:interface
package: excel!
fullName: Excel.DataBarConditionalFormat
summary: 表示 Excel 条件数据栏类型。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: axisColor
  uid: excel!Excel.DataBarConditionalFormat#axisColor:member
  package: excel!
  fullName: axisColor
  summary: 代表轴线的颜色的 HTML 颜色代码，格式 \# RRGGBB (例如，"FFA500" ) 或作为命名的 HTML 颜色 (例如 "橙色" ) 。 "" (空字符串) 如果不存在或未设置轴）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'axisColor: string;'
    return:
      type: string
- name: axisFormat
  uid: excel!Excel.DataBarConditionalFormat#axisFormat:member
  package: excel!
  fullName: axisFormat
  summary: 为 Excel 数据栏确定轴的方式的表示形式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      axisFormat:
                  | ConditionalDataBarAxisFormat
                  | "Automatic"
                  | "None"
                  | "CellMidPoint";
    return:
      type: >-
        | <xref uid="excel!Excel.ConditionalDataBarAxisFormat:enum" />
                    | "Automatic"
                    | "None"
                    | "CellMidPoint"
- name: barDirection
  uid: excel!Excel.DataBarConditionalFormat#barDirection:member
  package: excel!
  fullName: barDirection
  summary: 指定数据条图形的基于方向。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      barDirection:
                  | ConditionalDataBarDirection
                  | "Context"
                  | "LeftToRight"
                  | "RightToLeft";
    return:
      type: >-
        | <xref uid="excel!Excel.ConditionalDataBarDirection:enum" />
                    | "Context"
                    | "LeftToRight"
                    | "RightToLeft"
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = sheet.getRange(\"B8:E13\");\n    let conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.dataBar);\n    conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;\n\n    await context.sync();\n}\n```"
- name: lowerBoundRule
  uid: excel!Excel.DataBarConditionalFormat#lowerBoundRule:member
  package: excel!
  fullName: lowerBoundRule
  summary: 构成数据栏的下限（以及如何计算，如果适用）的规则。 `ConditionalDataBarRule`必须将对象设置为 (使用的 JSON 对象， `x.lowerBoundRule = {...}` 而不是`x.lowerBoundRule.formula = ...`<!-- -->).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'lowerBoundRule: ConditionalDataBarRule;'
    return:
      type: <xref uid="excel!Excel.ConditionalDataBarRule:interface" />
- name: negativeFormat
  uid: excel!Excel.DataBarConditionalFormat#negativeFormat:member
  package: excel!
  fullName: negativeFormat
  summary: 在 Excel 数据栏中的轴左侧的所有值的表示形式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly negativeFormat: ConditionalDataBarNegativeFormat;'
    return:
      type: <xref uid="excel!Excel.ConditionalDataBarNegativeFormat:interface" />
- name: positiveFormat
  uid: excel!Excel.DataBarConditionalFormat#positiveFormat:member
  package: excel!
  fullName: positiveFormat
  summary: 在 Excel 数据栏中的轴右侧的所有值的表示形式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly positiveFormat: ConditionalDataBarPositiveFormat;'
    return:
      type: <xref uid="excel!Excel.ConditionalDataBarPositiveFormat:interface" />
- name: showDataBarOnly
  uid: excel!Excel.DataBarConditionalFormat#showDataBarOnly:member
  package: excel!
  fullName: showDataBarOnly
  summary: 如果为 true，则对应用数据栏的单元格隐藏值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showDataBarOnly: boolean;'
    return:
      type: boolean
- name: upperBoundRule
  uid: excel!Excel.DataBarConditionalFormat#upperBoundRule:member
  package: excel!
  fullName: upperBoundRule
  summary: 构成数据栏的上限（以及如何计算，如果适用）的规则。 `ConditionalDataBarRule`必须将对象设置为 (使用的 JSON 对象， `x.upperBoundRule = {...}` 而不是`x.upperBoundRule.formula = ...`<!-- -->).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'upperBoundRule: ConditionalDataBarRule;'
    return:
      type: <xref uid="excel!Excel.ConditionalDataBarRule:interface" />
methods:
- name: load(propertyNames)
  uid: excel!Excel.DataBarConditionalFormat#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: ec144eefb293ec4f2989e4e3455993b025e6c7a7
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49416307"
