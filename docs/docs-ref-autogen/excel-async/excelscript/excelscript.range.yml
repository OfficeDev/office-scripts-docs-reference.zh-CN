### YamlMime:TSType
name: Excel.Range
uid: excel!Excel.Range:interface
package: excel!
fullName: Excel.Range
summary: Range 表示一个或多个连续单元格的集合，例如单元格、行、列、单元格块等。若要了解有关如何在整个 API 中使用范围的详细信息，请参阅 [使用 Excel JAVASCRIPT Api 处理区域](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges) 并使用 [excel javascript api (高级) ](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges-advanced)<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: address
  uid: excel!Excel.Range#address:member
  package: excel!
  fullName: address
  summary: 指定 A1 样式中的区域引用。 Address 值将包含工作表引用 (例如，"Sheet1！A1： B4 ") 。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly address: string;'
    return:
      type: string
- name: addressLocal
  uid: excel!Excel.Range#addressLocal:member
  package: excel!
  fullName: addressLocal
  summary: 以用户语言指定区域的区域引用。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly addressLocal: string;'
    return:
      type: string
- name: cellCount
  uid: excel!Excel.Range#cellCount:member
  package: excel!
  fullName: cellCount
  summary: 指定区域中的单元格的数目。 如果单元格数超过 2^31-1 (2,147,483,647)，此 API 返回 -1。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type: number
- name: columnCount
  uid: excel!Excel.Range#columnCount:member
  package: excel!
  fullName: columnCount
  summary: 指定区域中的总列数。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly columnCount: number;'
    return:
      type: number
- name: columnHidden
  uid: excel!Excel.Range#columnHidden:member
  package: excel!
  fullName: columnHidden
  summary: 表示当前区域中的所有列是否隐藏。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'columnHidden: boolean;'
    return:
      type: boolean
- name: columnIndex
  uid: excel!Excel.Range#columnIndex:member
  package: excel!
  fullName: columnIndex
  summary: 指定区域中的第一个单元格的列号。 从零开始编制索引。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly columnIndex: number;'
    return:
      type: number
- name: conditionalFormats
  uid: excel!Excel.Range#conditionalFormats:member
  package: excel!
  fullName: conditionalFormats
  summary: 与该范围相交的 ConditionalFormats 的集合。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly conditionalFormats: ConditionalFormatCollection;'
    return:
      type: <xref uid="excel!Excel.ConditionalFormatCollection:interface" />
- name: dataValidation
  uid: excel!Excel.Range#dataValidation:member
  package: excel!
  fullName: dataValidation
  summary: 返回数据有效性对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataValidation: DataValidation;'
    return:
      type: <xref uid="excel!Excel.DataValidation:interface" />
- name: format
  uid: excel!Excel.Range#format:member
  package: excel!
  fullName: format
  summary: 返回一个格式对象，其中封装了区域的字体、填充、边框、对齐方式和其他属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: RangeFormat;'
    return:
      type: <xref uid="excel!Excel.RangeFormat:interface" />
- name: formulas
  uid: excel!Excel.Range#formulas:member
  package: excel!
  fullName: formulas
  summary: 表示采用 A1 表示法的公式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulas: any[][];'
    return:
      type: any[][]
- name: formulasLocal
  uid: excel!Excel.Range#formulasLocal:member
  package: excel!
  fullName: formulasLocal
  summary: 表示采用 A1 表示法的公式，使用用户语言和数字格式区域设置。例如，英语中的公式 "=SUM(A1, 1.5)" 在德语中变为 "=SUMME(A1; 1,5)"。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulasLocal: any[][];'
    return:
      type: any[][]
- name: formulasR1C1
  uid: excel!Excel.Range#formulasR1C1:member
  package: excel!
  fullName: formulasR1C1
  summary: 表示采用 R1C1 样式表示法的公式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulasR1C1: any[][];'
    return:
      type: any[][]
- name: height
  uid: excel!Excel.Range#height:member
  package: excel!
  fullName: height
  summary: 返回从区域的上边缘到区域的下边缘的 100％ 缩放的距离（以磅为单位）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly height: number;'
    return:
      type: number
- name: hidden
  uid: excel!Excel.Range#hidden:member
  package: excel!
  fullName: hidden
  summary: 表示当前区域中的所有单元格是否隐藏。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly hidden: boolean;'
    return:
      type: boolean
- name: hyperlink
  uid: excel!Excel.Range#hyperlink:member
  package: excel!
  fullName: hyperlink
  summary: 表示当前区域的超链接。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'hyperlink: RangeHyperlink;'
    return:
      type: <xref uid="excel!Excel.RangeHyperlink:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Orders\");\n\n    let productsRange = sheet.getRange(\"A3:A5\");\n    productsRange.load(\"values\");\n\n    await context.sync();\n\n    // Create a hyperlink to a URL \n    // for each product name in the first table.\n    for (let i = 0; i < productsRange.values.length; i++) {\n        let cellRange = productsRange.getCell(i, 0);\n        let cellText = productsRange.values[i][0];\n\n        let hyperlink = {\n            textToDisplay: cellText,\n            screenTip: \"Search Bing for '\" + cellText + \"'\",\n            address: \"https://www.bing.com?q=\" + cellText\n        }\n        cellRange.hyperlink = hyperlink;\n    }\n\n    await context.sync();\n}\n```"
- name: isEntireColumn
  uid: excel!Excel.Range#isEntireColumn:member
  package: excel!
  fullName: isEntireColumn
  summary: 表示当前区域是否为整列。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireColumn: boolean;'
    return:
      type: boolean
- name: isEntireRow
  uid: excel!Excel.Range#isEntireRow:member
  package: excel!
  fullName: isEntireRow
  summary: 表示当前区域是否为整行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireRow: boolean;'
    return:
      type: boolean
- name: left
  uid: excel!Excel.Range#left:member
  package: excel!
  fullName: left
  summary: 返回从工作表的左边缘到区域的左边缘的 100％ 缩放的距离（以磅为单位）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly left: number;'
    return:
      type: number
- name: linkedDataTypeState
  uid: excel!Excel.Range#linkedDataTypeState:member
  package: excel!
  fullName: linkedDataTypeState
  summary: 表示每个单元格的数据类型状态。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly linkedDataTypeState: LinkedDataTypeState[][];'
    return:
      type: <xref uid="excel!Excel.LinkedDataTypeState:enum" />[][]
- name: numberFormat
  uid: excel!Excel.Range#numberFormat:member
  package: excel!
  fullName: numberFormat
  summary: 表示给定范围的 Excel 数字格式代码。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'numberFormat: any[][];'
    return:
      type: any[][]
- name: numberFormatLocal
  uid: excel!Excel.Range#numberFormatLocal:member
  package: excel!
  fullName: numberFormatLocal
  summary: 根据用户的语言设置，表示给定范围的 Excel 数字格式代码。 在获取或设置属性时，Excel 不会执行任何语言或格式强制 `numberFormatLocal` 。 任何返回的文本将根据系统设置中指定的语言使用本地格式化的字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'numberFormatLocal: any[][];'
    return:
      type: any[][]
- name: rowCount
  uid: excel!Excel.Range#rowCount:member
  package: excel!
  fullName: rowCount
  summary: 返回区域中的总行数。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly rowCount: number;'
    return:
      type: number
- name: rowHidden
  uid: excel!Excel.Range#rowHidden:member
  package: excel!
  fullName: rowHidden
  summary: 表示当前区域中的所有行是否隐藏。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'rowHidden: boolean;'
    return:
      type: boolean
- name: rowIndex
  uid: excel!Excel.Range#rowIndex:member
  package: excel!
  fullName: rowIndex
  summary: 返回区域中第一个单元格的行编号。 从零开始编制索引。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly rowIndex: number;'
    return:
      type: number
- name: sort
  uid: excel!Excel.Range#sort:member
  package: excel!
  fullName: sort
  summary: 表示当前 range 的区域排序。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly sort: RangeSort;'
    return:
      type: <xref uid="excel!Excel.RangeSort:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    let range = sheet.getRange(\"A1:E5\");\n\n    // Find the column header that provides the sort criteria.\n    let header = range.find(criteria, {});\n    header.load(\"columnIndex\");\n    await context.sync();\n\n    range.sort.apply(\n        [\n            {\n                key: header.columnIndex,\n                sortOn: Excel.SortOn.value\n            }\n        ],\n        false /*matchCase*/,\n        true /*hasHeaders*/,\n        Excel.SortOrientation.rows\n    );\n    await context.sync();\n}\n```"
- name: style
  uid: excel!Excel.Range#style:member
  package: excel!
  fullName: style
  summary: 表示当前区域的样式。 如果单元格的样式不一致，则将返回 null。 对于自定义样式，将返回样式名称。 对于内置样式，将返回一个表示 BuiltInStyle 枚举中的值的字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let worksheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = worksheet.getRange(\"A1:E1\");\n\n    // Apply built-in style. \n    // Styles are in the Home tab ribbon.\n    range.style = Excel.BuiltInStyle.neutral;\n    range.format.horizontalAlignment = \"Right\";\n\n    await context.sync();\n}\n```"
- name: text
  uid: excel!Excel.Range#text:member
  package: excel!
  fullName: text
  summary: 指定区域的文本值。 文本值与单元格宽度无关。 \#EXCEL UI 中发生的符号替换不会影响 API 返回的文本值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string[][];'
    return:
      type: string[][]
- name: top
  uid: excel!Excel.Range#top:member
  package: excel!
  fullName: top
  summary: 返回从工作表的上边缘到区域的上边缘的 100％ 缩放的距离（以磅为单位）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly top: number;'
    return:
      type: number
- name: values
  uid: excel!Excel.Range#values:member
  package: excel!
  fullName: values
  summary: 表示指定区域的原始值。 返回的数据可能是字符串、数字，也可能是布尔值。 包含错误的单元格将返回错误字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'values: any[][];'
    return:
      type: any[][]
- name: valueTypes
  uid: excel!Excel.Range#valueTypes:member
  package: excel!
  fullName: valueTypes
  summary: 指定每个单元格中的数据类型。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly valueTypes: RangeValueType[][];'
    return:
      type: <xref uid="excel!Excel.RangeValueType:enum" />[][]
- name: width
  uid: excel!Excel.Range#width:member
  package: excel!
  fullName: width
  summary: 返回从区域的左边缘到区域的右边缘的 100％ 缩放的距离（以磅为单位）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly width: number;'
    return:
      type: number
- name: worksheet
  uid: excel!Excel.Range#worksheet:member
  package: excel!
  fullName: worksheet
  summary: 包含当前区域的工作表。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
methods:
- name: autoFill(destinationRange, autoFillType)
  uid: excel!Excel.Range#autoFill:member(1)
  package: excel!
  fullName: autoFill(destinationRange, autoFillType)
  summary: >-
    使用指定的自动填充逻辑将范围从当前范围填充到目标区域。 目标区域可以是 null，也可以是水平或垂直扩展源。 不支持不连续的区域。


    有关详细信息，请参阅 [使用自动填充和快速填充](https://support.office.com/article/video-use-autofill-and-flash-fill-2e79a709-c814-4b27-8bc2-c4dc84d49464)<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      autoFill(
                  destinationRange?: Range | string,
                  autoFillType?:
                      | AutoFillType
                      | "FillDefault"
                      | "FillCopy"
                      | "FillSeries"
                      | "FillFormats"
                      | "FillValues"
                      | "FillDays"
                      | "FillWeekdays"
                      | "FillMonths"
                      | "FillYears"
                      | "LinearTrend"
                      | "GrowthTrend"
                      | "FlashFill"
              ): void;
    parameters:
    - id: destinationRange
      description: 要自动填充的目标区域。 如果目标区域为 null，则数据将根据周围的单元格进行填充 (这是双击 UI 的区域填充柄) 时的行为。
      type: <xref uid="excel!Excel.Range:interface" /> | string
    - id: autoFillType
      description: 自动填充的类型。 根据当前区域的内容，指定目标区域的填充方式。 默认值为 "FillDefault"。
      type: "| <xref uid=\"excel!Excel.AutoFillType:enum\" />\n                | \"FillDefault\"\n                | \"FillCopy\"\n                | \"FillSeries\"\n                | \"FillFormats\"\n                | \"FillValues\"\n                | \"FillDays\"\n                | \"FillWeekdays\"\n                | \"FillMonths\"\n                | \"FillYears\"\n                | \"LinearTrend\"\n                | \"GrowthTrend\"\n                | \"FlashFill\"\n        "
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n  let sheet = context.workbook.worksheets.getActiveWorksheet();\n  let sumCell = sheet.getRange(\"P4\");\n  \n  // Copy everything. The formulas will be contextually updated based on their new locations.\n  sumCell.autoFill(\"P4:P7\", Excel.AutoFillType.fillCopy);\n  sumCell.format.autofitColumns();\n  await context.sync();\n}\n```"
- name: calculate()
  uid: excel!Excel.Range#calculate:member(1)
  package: excel!
  fullName: calculate()
  summary: 计算工作表上的单元格区域。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(): void;'
    return:
      type: void
      description: ''
- name: clear(applyTo)
  uid: excel!Excel.Range#clear:member(1)
  package: excel!
  fullName: clear(applyTo)
  summary: 清除区域值、格式、填充、边框等。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      clear(
                  applyTo?:
                      | ClearApplyTo
                      | "All"
                      | "Formats"
                      | "Contents"
                      | "Hyperlinks"
                      | "RemoveHyperlinks"
              ): void;
    parameters:
    - id: applyTo
      description: 可选。 确定清除操作的类型。 有关详细信息，请参阅 ClearApplyTo。
      type: "| <xref uid=\"excel!Excel.ClearApplyTo:enum\" />\n                | \"All\"\n                | \"Formats\"\n                | \"Contents\"\n                | \"Hyperlinks\"\n                | \"RemoveHyperlinks\"\n        "
    return:
      type: void
      description: ''
- name: convertDataTypeToText()
  uid: excel!Excel.Range#convertDataTypeToText:member(1)
  package: excel!
  fullName: convertDataTypeToText()
  summary: 将具有数据类型的区域单元格转换为文本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type: void
      description: ''
- name: convertToLinkedDataType(serviceID, languageCulture)
  uid: excel!Excel.Range#convertToLinkedDataType:member(1)
  package: excel!
  fullName: convertToLinkedDataType(serviceID, languageCulture)
  summary: 将区域单元格转换为工作表中的链接数据类型。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      convertToLinkedDataType(
                  serviceID: number,
                  languageCulture: string
              ): void;
    parameters:
    - id: serviceID
      description: 将用于查询数据的服务 ID。
      type: number
    - id: languageCulture
      description: 要为其查询服务的语言区域性。
      type: string
    return:
      type: void
      description: ''
- name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  uid: excel!Excel.Range#copyFrom:member(1)
  package: excel!
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  summary: 将单元格数据或格式从源区域或 RangeAreas 复制到当前区域。 目标区域的大小可以与源区域或 RangeAreas 的大小不同。 如果目标小于源，则将自动扩展目标。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      copyFrom(
                  sourceRange: Range | RangeAreas | string,
                  copyType?:
                      | RangeCopyType
                      | "All"
                      | "Formulas"
                      | "Values"
                      | "Formats",
                  skipBlanks?: boolean,
                  transpose?: boolean
              ): void;
    parameters:
    - id: sourceRange
      description: 要从其复制的源区域或 RangeAreas。 当源 RangeAreas 有多个区域时，必须通过删除矩形区域中的完整行或列来创建窗体。
      type: <xref uid="excel!Excel.Range:interface" /> | <xref uid="excel!Excel.RangeAreas:interface" /> | string
    - id: copyType
      description: 要复制的单元格数据的类型或格式。 默认值为 "All"。
      type: >-
        | <xref uid="excel!Excel.RangeCopyType:enum" />
                        | "All"
                        | "Formulas"
                        | "Values"
                        | "Formats"
    - id: skipBlanks
      description: 如果为 True，则在源区域中跳过空白单元格。 默认为 false。
      type: boolean
    - id: transpose
      description: 如此如果要转置目标区域中的单元格。 默认为 false。
      type: boolean
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.getRange(\"F2\").values = [[\"Copied Formula\"]];\n    sheet.getRange(\"F2\").format.autofitColumns();\n\n    // copy a range preserving the formulas\n    // note: non-formula values are copied over as is\n    sheet.getRange(\"G2\").copyFrom(\"A1:E1\", Excel.RangeCopyType.formulas);\n    await context.sync();\n}\n```"
- name: delete(shift)
  uid: excel!Excel.Range#delete:member(1)
  package: excel!
  fullName: delete(shift)
  summary: 删除与区域相关的单元格。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(shift: DeleteShiftDirection | "Up" | "Left"): void;'
    parameters:
    - id: shift
      description: 指定移动单元格的方式。 有关详细信息，请参阅 DeleteShiftDirection。
      type: <xref uid="excel!Excel.DeleteShiftDirection:enum" /> | "Up" | "Left"
    return:
      type: void
      description: ''
- name: find(text, criteria)
  uid: excel!Excel.Range#find:member(1)
  package: excel!
  fullName: find(text, criteria)
  summary: 根据指定的条件查找给定的字符串。 如果当前范围大于单个单元格，则搜索将限制为该范围，否则搜索将覆盖该单元格的所有起始工作表。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'find(text: string, criteria: SearchCriteria): Range;'
    parameters:
    - id: text
      description: 要查找的字符串。
      type: string
    - id: criteria
      description: 其他搜索条件，包括搜索方向以及搜索是否需要匹配整个单元格或是否区分大小写。
      type: <xref uid="excel!Excel.SearchCriteria:interface" />
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: findOrNullObject(text, criteria)
  uid: excel!Excel.Range#findOrNullObject:member(1)
  package: excel!
  fullName: findOrNullObject(text, criteria)
  summary: 根据指定的条件查找给定的字符串。 如果当前范围大于单个单元格，则搜索将限制为该范围，否则搜索将覆盖该单元格的所有起始工作表。 如果没有匹配项，则此函数将返回一个 null 对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'findOrNullObject(text: string, criteria: SearchCriteria): Range;'
    parameters:
    - id: text
      description: 要查找的字符串。
      type: string
    - id: criteria
      description: 其他搜索条件，包括搜索方向以及搜索是否需要匹配整个单元格或是否区分大小写。
      type: <xref uid="excel!Excel.SearchCriteria:interface" />
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let table = sheet.tables.getItem(\"ExpensesTable\");\n    let searchRange = table.getRange();\n    let foundRange = searchRange.findOrNullObject($(\"#searchText\").text(), {\n        completeMatch: isCompleteMatchToggle,\n        matchCase: isMatchCaseToggle,\n        searchDirection: searchDirectionToggle\n    });\n    \n    foundRange.load(\"address\");\n    await context.sync();\n\n    if (foundRange.isNullObject) {\n        console.log(\"Text not found\");\n    } else {\n        console.log(foundRange.address);\n    }\n}\n```"
- name: flashFill()
  uid: excel!Excel.Range#flashFill:member(1)
  package: excel!
  fullName: flashFill()
  summary: 对当前区域进行快速填充。快速填充在感知到模式时可自动填充数据，因此该区域必须是单列区域且周围有数据以便查找模式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'flashFill(): void;'
    return:
      type: void
      description: ''
- name: getAbsoluteResizedRange(numRows, numColumns)
  uid: excel!Excel.Range#getAbsoluteResizedRange:member(1)
  package: excel!
  fullName: getAbsoluteResizedRange(numRows, numColumns)
  summary: 获取一个 Range 对象，该对象的左上单元格与当前 Range 对象相同，但具有指定的行数和列数。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAbsoluteResizedRange(numRows: number, numColumns: number): Range;'
    parameters:
    - id: numRows
      description: 新范围大小的行数。
      type: number
    - id: numColumns
      description: 新范围大小的列数。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getBoundingRect(anotherRange)
  uid: excel!Excel.Range#getBoundingRect:member(1)
  package: excel!
  fullName: getBoundingRect(anotherRange)
  summary: 获取包含指定区域的最小 range 对象。 例如，“B2:C5”和“D10:E15”的 GetBoundingRect 为“B2:E15”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBoundingRect(anotherRange: Range | string): Range;'
    parameters:
    - id: anotherRange
      description: range 对象或地址或区域名称。
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getCell(row, column)
  uid: excel!Excel.Range#getCell:member(1)
  package: excel!
  fullName: getCell(row, column)
  summary: 根据行和列编号获取包含单个单元格的 range 对象。 单元格可以位于其父区域的边界之外，但前提是它停留在工作表网格中。 返回的单元格位于相对于区域左上角的单元格的位置。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCell(row: number, column: number): Range;'
    parameters:
    - id: row
      description: 要检索的单元格的行号。 从零开始编制索引。
      type: number
    - id: column
      description: 要检索的单元格的列号。 从零开始编制索引。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getColumn(column)
  uid: excel!Excel.Range#getColumn:member(1)
  package: excel!
  fullName: getColumn(column)
  summary: 获取范围中包含的列。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumn(column: number): Range;'
    parameters:
    - id: column
      description: 要检索的区域的列号。 从零开始编制索引。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getColumnsAfter(count)
  uid: excel!Excel.Range#getColumnsAfter:member(1)
  package: excel!
  fullName: getColumnsAfter(count)
  summary: 获取当前范围对象右侧的一定数量的列。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnsAfter(count?: number): Range;'
    parameters:
    - id: count
      description: 可选。生成的范围中要包含的列数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getColumnsBefore(count)
  uid: excel!Excel.Range#getColumnsBefore:member(1)
  package: excel!
  fullName: getColumnsBefore(count)
  summary: 获取当前范围对象左侧的一定数量的列。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnsBefore(count?: number): Range;'
    parameters:
    - id: count
      description: 可选。生成的范围中要包含的列数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getEntireColumn()
  uid: excel!Excel.Range#getEntireColumn:member(1)
  package: excel!
  fullName: getEntireColumn()
  summary: 获取一个对象，该对象表示区域中 (的整列。例如，如果当前区域表示单元格 "B4： E11"， `getEntireColumn` 则它是表示列 "B:E" 的区域 ) 。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireColumn(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getEntireRow()
  uid: excel!Excel.Range#getEntireRow:member(1)
  package: excel!
  fullName: getEntireRow()
  summary: 获取表示区域中整行的对象 (例如，如果当前区域表示单元格 "B4： E11"， `GetEntireRow` 则它是表示行 "4:11" ) 的区域。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireRow(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getImage()
  uid: excel!Excel.Range#getImage:member(1)
  package: excel!
  fullName: getImage()
  summary: 将区域呈现为 base64 编码的 png 图像。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getImage(): ClientResult<string>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;string&gt;
      description: ''
- name: getIntersection(anotherRange)
  uid: excel!Excel.Range#getIntersection:member(1)
  package: excel!
  fullName: getIntersection(anotherRange)
  summary: 获取表示指定区域的矩形交集的 range 对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersection(anotherRange: Range | string): Range;'
    parameters:
    - id: anotherRange
      description: 将用于确定区域交集的 range 对象或区域地址。
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getIntersectionOrNullObject(anotherRange)
  uid: excel!Excel.Range#getIntersectionOrNullObject:member(1)
  package: excel!
  fullName: getIntersectionOrNullObject(anotherRange)
  summary: 获取表示指定区域的矩形交集的 range 对象。 如果找不到任何交集，则此方法返回空对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersectionOrNullObject(anotherRange: Range | string): Range;'
    parameters:
    - id: anotherRange
      description: 将用于确定区域交集的 range 对象或区域地址。
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = salesTable.getDataBodyRange();\n\n    // We want the most recent quarter that has data, so\n    // exclude quarters without data and get the last of\n    // the remaining columns.\n    let usedDataRange = dataRange.getUsedRange(true /* valuesOnly */);\n    let currentQuarterRange = usedDataRange.getLastColumn();\n\n    // Asian and European teams have separate contests.\n    let asianSalesRange = sheet.getRange(\"A2:E4\");\n    let europeanSalesRange = sheet.getRange(\"A5:E7\");\n\n    // The data for each chart is the intersection of the\n    // current quarter column and the rows for the continent.\n    let asianContestRange = asianSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n    let europeanContestRange = europeanSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n\n    // Must sync before you can test the output of *OrNullObject\n    // method/property.\n    await context.sync();\n\n    if (asianContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"Asian\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"Asian\",\n            asianContestRange,\n            \"A9\",\n            \"F24\"\n        );\n    }\n\n    if (europeanContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"European\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"European\",\n            europeanContestRange,\n            \"A25\",\n            \"F40\"\n        );\n    }\n\n    await context.sync();\n}\n```"
- name: getLastCell()
  uid: excel!Excel.Range#getLastCell:member(1)
  package: excel!
  fullName: getLastCell()
  summary: 获取区域内的最后一个单元格。 例如，“B2:D5”的最后一个单元格是“D5”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLastCell(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getLastColumn()
  uid: excel!Excel.Range#getLastColumn:member(1)
  package: excel!
  fullName: getLastColumn()
  summary: 获取区域内的最后一列。 例如，“B2:D5”的最后一列是“D2:D5”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLastColumn(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getLastRow()
  uid: excel!Excel.Range#getLastRow:member(1)
  package: excel!
  fullName: getLastRow()
  summary: 获取区域内的最后一行。 例如，“B2:D5”的最后一行是“B5:D5”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLastRow(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getOffsetRange(rowOffset, columnOffset)
  uid: excel!Excel.Range#getOffsetRange:member(1)
  package: excel!
  fullName: getOffsetRange(rowOffset, columnOffset)
  summary: 获取表示与指定区域偏移的区域的对象。返回的区域的尺寸将与此区域一致。如果强制在工作表网格的边界之外生成区域，将引发错误。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOffsetRange(rowOffset: number, columnOffset: number): Range;'
    parameters:
    - id: rowOffset
      description: 区域偏移的行数（正数、负数或 0）。正数表示向下偏移，负数表示向上偏移。
      type: number
    - id: columnOffset
      description: 区域偏移的列数（正数、负数或 0）。正数表示向右偏移，负数表示向左偏移。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getPivotTables(fullyContained)
  uid: excel!Excel.Range#getPivotTables:member(1)
  package: excel!
  fullName: getPivotTables(fullyContained)
  summary: 获取与区域重叠的数据透视表的限定集合。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPivotTables(fullyContained?: boolean): PivotTableScopedCollection;'
    parameters:
    - id: fullyContained
      description: 如果为 true，则仅返回完全包含在区域边界内的数据透视表。 默认值为 false。
      type: boolean
    return:
      type: <xref uid="excel!Excel.PivotTableScopedCollection:interface" />
      description: ''
- name: getResizedRange(deltaRows, deltaColumns)
  uid: excel!Excel.Range#getResizedRange:member(1)
  package: excel!
  fullName: getResizedRange(deltaRows, deltaColumns)
  summary: 获取与当前范围对象类似的范围对象，但其右下角可通过一定数量的行和列进行展开（或合拢）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getResizedRange(deltaRows: number, deltaColumns: number): Range;'
    parameters:
    - id: deltaRows
      description: 相对于当前范围，展开右下角的行数。使用正数可展开范围，使用负数可合拢范围。
      type: number
    - id: deltaColumns
      description: 相对于当前范围，从右下角扩展的列数。 使用正数可展开范围，使用负数可合拢范围。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRow(row)
  uid: excel!Excel.Range#getRow:member(1)
  package: excel!
  fullName: getRow(row)
  summary: 获取范围中包含的行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRow(row: number): Range;'
    parameters:
    - id: row
      description: 要检索的区域的行号。 从零开始编制索引。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRowsAbove(count)
  uid: excel!Excel.Range#getRowsAbove:member(1)
  package: excel!
  fullName: getRowsAbove(count)
  summary: 获取当前范围对象上方的一定数量的行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowsAbove(count?: number): Range;'
    parameters:
    - id: count
      description: 可选。生成的范围中要包含的行数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRowsBelow(count)
  uid: excel!Excel.Range#getRowsBelow:member(1)
  package: excel!
  fullName: getRowsBelow(count)
  summary: 获取当前范围对象下方的一定数量的行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowsBelow(count?: number): Range;'
    parameters:
    - id: count
      description: 可选。生成的范围中要包含的行数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getSpecialCells(cellType, cellValueType)
  uid: excel!Excel.Range#getSpecialCells:member(1)
  package: excel!
  fullName: getSpecialCells(cellType, cellValueType)
  summary: 获取包含一个或多个矩形区域的 RangeAreas 对象，它表示匹配指定类型和值的所有单元格。 如果找不到特殊单元格，则将引发 ItemNotFound 错误。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCells(
                  cellType:
                      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible",
                  cellValueType?:
                      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
              ): RangeAreas;
    parameters:
    - id: cellType
      description: 要包含的单元格的类型。
      type: >-
        | <xref uid="excel!Excel.SpecialCellType:enum" />
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible"
    - id: cellValueType
      description: 如果 cellType 为常量或公式，则此参数用于确定要在结果中包含哪些类型的单元格。 可以将这些值组合在一起，以返回多个类型。 默认情况下，将选择所有常量或公式，无论类型如何。
      type: "| <xref uid=\"excel!Excel.SpecialCellValueType:enum\" />\n                | \"All\"\n                | \"Errors\"\n                | \"ErrorsLogical\"\n                | \"ErrorsNumbers\"\n                | \"ErrorsText\"\n                | \"ErrorsLogicalNumber\"\n                | \"ErrorsLogicalText\"\n                | \"ErrorsNumberText\"\n                | \"Logical\"\n                | \"LogicalNumbers\"\n                | \"LogicalText\"\n                | \"LogicalNumbersText\"\n                | \"Numbers\"\n                | \"NumbersText\"\n                | \"Text\"\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getSpecialCellsOrNullObject(cellType, cellValueType)
  uid: excel!Excel.Range#getSpecialCellsOrNullObject:member(1)
  package: excel!
  fullName: getSpecialCellsOrNullObject(cellType, cellValueType)
  summary: 获取包含一个或多个区域的 RangeAreas 对象，它表示匹配指定类型和值的所有单元格。 如果找不到特殊单元格，则返回 null 对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCellsOrNullObject(
                  cellType:
                      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible",
                  cellValueType?:
                      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
              ): RangeAreas;
    parameters:
    - id: cellType
      description: 要包含的单元格的类型。
      type: >-
        | <xref uid="excel!Excel.SpecialCellType:enum" />
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible"
    - id: cellValueType
      description: 如果 cellType 为常量或公式，则此参数用于确定要在结果中包含哪些类型的单元格。 可以将这些值组合在一起，以返回多个类型。 默认情况下，将选择所有常量或公式，无论类型如何。
      type: "| <xref uid=\"excel!Excel.SpecialCellValueType:enum\" />\n                | \"All\"\n                | \"Errors\"\n                | \"ErrorsLogical\"\n                | \"ErrorsNumbers\"\n                | \"ErrorsText\"\n                | \"ErrorsLogicalNumber\"\n                | \"ErrorsLogicalText\"\n                | \"ErrorsNumberText\"\n                | \"Logical\"\n                | \"LogicalNumbers\"\n                | \"LogicalText\"\n                | \"LogicalNumbersText\"\n                | \"Numbers\"\n                | \"NumbersText\"\n                | \"Text\"\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getSurroundingRegion()
  uid: excel!Excel.Range#getSurroundingRegion:member(1)
  package: excel!
  fullName: getSurroundingRegion()
  summary: 返回一个 Range 对象，该对象表示此区域左上单元格的周围区域。 周围区域是由相对于该区域的空白行和空白列的任何组合所限定的区域。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSurroundingRegion(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getTables(fullyContained)
  uid: excel!Excel.Range#getTables:member(1)
  package: excel!
  fullName: getTables(fullyContained)
  summary: 获取与区域重叠的限定范围的表格集合。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTables(fullyContained?: boolean): TableScopedCollection;'
    parameters:
    - id: fullyContained
      description: 如果为 true，则仅返回完全包含在区域边界内的表。 默认值为 false。
      type: boolean
    return:
      type: <xref uid="excel!Excel.TableScopedCollection:interface" />
      description: ''
- name: getUsedRange(valuesOnly)
  uid: excel!Excel.Range#getUsedRange:member(1)
  package: excel!
  fullName: getUsedRange(valuesOnly)
  summary: 返回指定 Range 对象的所用区域。如果区域内没有使用单元格，此函数将引发 ItemNotFound 错误。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRange(valuesOnly?: boolean): Range;'
    parameters:
    - id: valuesOnly
      description: 仅将有值的单元格视为已使用的单元格。
      type: boolean
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getUsedRangeOrNullObject(valuesOnly)
  uid: excel!Excel.Range#getUsedRangeOrNullObject:member(1)
  package: excel!
  fullName: getUsedRangeOrNullObject(valuesOnly)
  summary: 返回指定 Range 对象的所用区域。如果区域内没有使用单元格，此函数将返回 NULL 对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Range;'
    parameters:
    - id: valuesOnly
      description: 仅将有值的单元格视为已使用的单元格。
      type: boolean
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = salesTable.getDataBodyRange();\n\n    // Pass true so only cells with values count as used\n    let usedDataRange = dataRange.getUsedRangeOrNullObject(\n        true /* valuesOnly */\n    );\n\n    //Must sync before reading value returned from *OrNullObject method/property.\n    await context.sync();\n\n    if (usedDataRange.isNullObject) {\n        console.log(\"Need Data to Make Chart\");\n        console.log(\"To create a meaningful chart, press 'Fill the table' (or add names to the Product column and numbers to some of the other cells). Then press 'Try to create chart' again.\");\n    } else {\n        let chart = sheet.charts.add(\n            Excel.ChartType.columnClustered,\n            dataRange,\n            \"Columns\"\n        );\n        chart.setPosition(\"A15\", \"F30\");\n        chart.title.text = \"Quarterly sales chart\";\n        chart.legend.position = \"Right\";\n        chart.legend.format.fill.setSolidColor(\"white\");\n        chart.dataLabels.format.font.size = 15;\n        chart.dataLabels.format.font.color = \"black\";\n    }\n\n    await context.sync();\n}\n```"
- name: getVisibleView()
  uid: excel!Excel.Range#getVisibleView:member(1)
  package: excel!
  fullName: getVisibleView()
  summary: 表示当前 range 对象的可见行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getVisibleView(): RangeView;'
    return:
      type: <xref uid="excel!Excel.RangeView:interface" />
      description: ''
- name: group(groupOption)
  uid: excel!Excel.Range#group:member(1)
  package: excel!
  fullName: group(groupOption)
  summary: 对列和行进行分组以进行分级显示。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'group(groupOption: GroupOption | "ByRows" | "ByColumns"): void;'
    parameters:
    - id: groupOption
      description: 指定如何按行或列对区域进行分组。 `InvalidArgument`当组选项与范围或属性不同时，将引发错误 `isEntireRow` `isEntireColumn` (也就是说， `range.isEntireRow` 为 True 且 `groupOption` 为 "ByColumns"，或者为 `range.isEntireColumn` `groupOption` "ByRows" ) 。
      type: <xref uid="excel!Excel.GroupOption:enum" /> | "ByRows" | "ByColumns"
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nExcel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    \n    // Group the larger, main level. Note that the outline controls\n    // will be on row 10, meaning 4-9 will collapse and expand.\n    sheet.getRange(\"4:9\").group(Excel.GroupOption.byRows);\n\n    // Group the smaller, sublevels. Note that the outline controls\n    // will be on rows 6 and 9, meaning 4-5 and 7-8 will collapse and expand.\n    sheet.getRange(\"4:5\").group(Excel.GroupOption.byRows);\n    sheet.getRange(\"7:8\").group(Excel.GroupOption.byRows);\n    await context.sync();\n}\n```"
- name: hideGroupDetails(groupOption)
  uid: excel!Excel.Range#hideGroupDetails:member(1)
  package: excel!
  fullName: hideGroupDetails(groupOption)
  summary: 隐藏行或列组的详细信息。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      hideGroupDetails(
                  groupOption: GroupOption | "ByRows" | "ByColumns"
              ): void;
    parameters:
    - id: groupOption
      description: 指定是否隐藏分组行或分组列的详细信息。
      type: "<xref uid=\"excel!Excel.GroupOption:enum\" /> | \"ByRows\" | \"ByColumns\"\n        "
    return:
      type: void
      description: ''
- name: insert(shift)
  uid: excel!Excel.Range#insert:member(1)
  package: excel!
  fullName: insert(shift)
  summary: 将单个单元格或一系列单元格插入到工作表中取代此区域，并移动其他单元格以留出空间。在现在空白的空间返回新的 Range 对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insert(shift: InsertShiftDirection | "Down" | "Right"): Range;'
    parameters:
    - id: shift
      description: 指定移动单元格的方式。 有关详细信息，请参阅 InsertShiftDirection。
      type: <xref uid="excel!Excel.InsertShiftDirection:enum" /> | "Down" | "Right"
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Range#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: void
      description: ''
- name: merge(across)
  uid: excel!Excel.Range#merge:member(1)
  package: excel!
  fullName: merge(across)
  summary: 将范围单元格合并到工作表的一个区域内。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'merge(across?: boolean): void;'
    parameters:
    - id: across
      description: 可选。 如果为 True，则将指定区域中每一行的单元格合并为一个单独的合并单元格。 默认值是 false。
      type: boolean
    return:
      type: void
      description: ''
- name: moveTo(destinationRange)
  uid: excel!Excel.Range#moveTo:member(1)
  package: excel!
  fullName: moveTo(destinationRange)
  summary: 将单元格的值、格式和公式从当前区域移动到目标区域，替换这些单元格中的旧信息。 如果目标区域小于当前区域，则将自动扩展目标区域。 原始区域区域以外的目标区域中的任何单元格都不会更改。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'moveTo(destinationRange: Range | string): void;'
    parameters:
    - id: destinationRange
      description: destinationRange 指定此范围中的信息将移动到的范围。
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: void
      description: ''
- name: removeDuplicates(columns, includesHeader)
  uid: excel!Excel.Range#removeDuplicates:member(1)
  package: excel!
  fullName: removeDuplicates(columns, includesHeader)
  summary: 从列指定的区域中删除重复值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      removeDuplicates(
                  columns: number[],
                  includesHeader: boolean
              ): RemoveDuplicatesResult;
    parameters:
    - id: columns
      description: 区域中可能包含重复项的列。 至少需要指定一个列。 从零开始编制索引。
      type: number[]
    - id: includesHeader
      description: 如果输入数据包含标头，则为 True。 默认为 false。
      type: boolean
    return:
      type: <xref uid="excel!Excel.RemoveDuplicatesResult:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = sheet.getRange(\"B2:D11\");\n\n    let deleteResult = range.removeDuplicates([0],true);    \n    deleteResult.load();    \n    await context.sync();\n\n    console.log(deleteResult.removed + \" entries with duplicate names removed.\");\n    console.log(deleteResult.uniqueRemaining + \" entries with unique names remain in the range.\");\n}\n```"
- name: replaceAll(text, replacement, criteria)
  uid: excel!Excel.Range#replaceAll:member(1)
  package: excel!
  fullName: replaceAll(text, replacement, criteria)
  summary: 根据当前区域内指定的条件查找并替换给定的字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      replaceAll(
                  text: string,
                  replacement: string,
                  criteria: ReplaceCriteria
              ): ClientResult<number>;
    parameters:
    - id: text
      description: 要查找的字符串。
      type: string
    - id: replacement
      description: 要将原始替换为的字符串。
      type: string
    - id: criteria
      description: 其他替换条件。
      type: <xref uid="excel!Excel.ReplaceCriteria:interface" />
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: select()
  uid: excel!Excel.Range#select:member(1)
  package: excel!
  fullName: select()
  summary: 在 Excel UI 中选择指定的区域。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(): void;'
    return:
      type: void
      description: ''
- name: setDirty()
  uid: excel!Excel.Range#setDirty:member(1)
  package: excel!
  fullName: setDirty()
  summary: 设置下一次重新计算发生时要重新计算的区域。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDirty(): void;'
    return:
      type: void
      description: ''
- name: showCard()
  uid: excel!Excel.Range#showCard:member(1)
  package: excel!
  fullName: showCard()
  summary: 显示活动单元格的卡片（如果该单元格具有富值内容）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showCard(): void;'
    return:
      type: void
      description: ''
- name: showGroupDetails(groupOption)
  uid: excel!Excel.Range#showGroupDetails:member(1)
  package: excel!
  fullName: showGroupDetails(groupOption)
  summary: 显示行或列组的详细信息。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      showGroupDetails(
                  groupOption: GroupOption | "ByRows" | "ByColumns"
              ): void;
    parameters:
    - id: groupOption
      description: 指定是否显示分组行或分组列的详细信息。
      type: "<xref uid=\"excel!Excel.GroupOption:enum\" /> | \"ByRows\" | \"ByColumns\"\n        "
    return:
      type: void
      description: ''
- name: ungroup(groupOption)
  uid: excel!Excel.Range#ungroup:member(1)
  package: excel!
  fullName: ungroup(groupOption)
  summary: 取消边框的列和行的组合。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'ungroup(groupOption: GroupOption | "ByRows" | "ByColumns"): void;'
    parameters:
    - id: groupOption
      description: 指定如何将区域与行或列取消组合。
      type: <xref uid="excel!Excel.GroupOption:enum" /> | "ByRows" | "ByColumns"
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nExcel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    \n    // This removes two levels of groups from the \"A1-R10\" range.\n    // Any groups at the same level on the same dimension will be removed by a single call.\n    sheet.getRange(\"A1:R10\").ungroup(Excel.GroupOption.byRows);\n    sheet.getRange(\"A1:R10\").ungroup(Excel.GroupOption.byRows);\n    sheet.getRange(\"A1:R10\").ungroup(Excel.GroupOption.byColumns);\n    sheet.getRange(\"A1:R10\").ungroup(Excel.GroupOption.byColumns);\n    await context.sync();\n}\n```"
- name: unmerge()
  uid: excel!Excel.Range#unmerge:member(1)
  package: excel!
  fullName: unmerge()
  summary: 将范围单元格取消合并为各个单元格。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'unmerge(): void;'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: de868bdab7b9962ebb7c9d967bd06a3d73f5e9fd
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418784"
