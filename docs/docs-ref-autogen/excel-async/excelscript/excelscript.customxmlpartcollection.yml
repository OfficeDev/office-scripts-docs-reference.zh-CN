### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CustomXmlPartCollection:interface'
    summary: 自定义 XML 部件的集合。
    name: Excel.CustomXmlPartCollection
    fullName: Excel.CustomXmlPartCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.CustomXmlPartCollection#add:member(1)'
      - 'excel!Excel.CustomXmlPartCollection#getByNamespace:member(1)'
      - 'excel!Excel.CustomXmlPartCollection#getCount:member(1)'
      - 'excel!Excel.CustomXmlPartCollection#getItem:member(1)'
      - 'excel!Excel.CustomXmlPartCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.CustomXmlPartCollection#load:member(1)'
  - uid: 'excel!Excel.CustomXmlPartCollection#add:member(1)'
    summary: 向工作簿添加新的自定义 XML 部件。
    name: add(xml)
    fullName: add(xml)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(xml: string): CustomXmlPart;'
      return:
        type:
          - 'excel!Excel.CustomXmlPart:interface'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              // You must have the xmlns attribute to populate the 
              // CustomXml.namespaceUri property.
              let originalXml = "<Reviewers xmlns='http://schemas.contoso.com/review/1.0'><Reviewer>Juan</Reviewer><Reviewer>Hong</Reviewer><Reviewer>Sally</Reviewer></Reviewers>";
              let customXmlPart = context.workbook.customXmlParts.add(originalXml);
              customXmlPart.load("id");
              let xmlBlob = customXmlPart.getXml();

              await context.sync();

              let readableXml = addLineBreaksToXML(xmlBlob.value);
              $("#display-xml").text(readableXml);

              // Store the XML part's ID in a setting.
              let settings = context.workbook.settings;
              settings.add("ContosoReviewXmlPartId", customXmlPart.id);

              await context.sync();
          }
          ```
      parameters:
        - id: xml
          description: XML 内容。 必须是有效的 XML 片段。
          type:
            - string
  - uid: 'excel!Excel.CustomXmlPartCollection#getByNamespace:member(1)'
    summary: 获取其命名空间匹配给定命名空间的自定义 XML 部件的新作用域内集合。
    name: getByNamespace(namespaceUri)
    fullName: getByNamespace(namespaceUri)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByNamespace(namespaceUri: string): CustomXmlPartScopedCollection;'
      return:
        type:
          - 'excel!Excel.CustomXmlPartScopedCollection:interface'
        description: ''
      parameters:
        - id: namespaceUri
          description: '这必须是完全限定的架构 URI;例如，" http://schemas.contoso.com/review/1.0 "。'
          type:
            - string
  - uid: 'excel!Excel.CustomXmlPartCollection#getCount:member(1)'
    summary: 获取此集合中 CustomXml 部件的数量。
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'excel!Excel.CustomXmlPartCollection#getItem:member(1)'
    summary: 获取基于其 ID 的自定义 XML 部件。
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): CustomXmlPart;'
      return:
        type:
          - 'excel!Excel.CustomXmlPart:interface'
        description: ''
      parameters:
        - id: id
          description: 要检索的对象的 ID。
          type:
            - string
  - uid: 'excel!Excel.CustomXmlPartCollection#getItemOrNullObject:member(1)'
    summary: 获取基于其 ID 的自定义 XML 部件。 如果 CustomXmlPart 不存在，则返回对象的 isNull 属性将为 true。
    name: getItemOrNullObject(id)
    fullName: getItemOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): CustomXmlPart;'
      return:
        type:
          - 'excel!Excel.CustomXmlPart:interface'
        description: ''
      parameters:
        - id: id
          description: 要检索的对象的 ID。
          type:
            - string
  - uid: 'excel!Excel.CustomXmlPartCollection#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在 `context.sync()` 读取属性之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.CustomXmlPart:interface'
    name: CustomXmlPart
    fullName: Excel.CustomXmlPart
  - uid: 'excel!Excel.CustomXmlPartScopedCollection:interface'
    name: CustomXmlPartScopedCollection
    fullName: Excel.CustomXmlPartScopedCollection