### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTableCollection:interface'
    summary: 表示属于工作簿或工作表的所有 PivotTable 对象的集合。
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.PivotTableCollection#add:member(1)'
      - 'excel!Excel.PivotTableCollection#getCount:member(1)'
      - 'excel!Excel.PivotTableCollection#getItem:member(1)'
      - 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.PivotTableCollection#load:member(1)'
      - 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
  - uid: 'excel!Excel.PivotTableCollection#add:member(1)'
    summary: 根据指定的源数据添加数据透视表，并将其插入到目标区域左上角的单元格处。
    name: 'add(name, source, destination)'
    fullName: 'add(name, source, destination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        add(
                    name: string,
                    source: Range | string | Table,
                    destination: Range | string
                ): PivotTable;
      return:
        type:
          - 'excel!Excel.PivotTable:interface'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
              let rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
              context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

              await context.sync();
          }
          ```
      parameters:
        - id: name
          description: 新数据透视表的名称。
          type:
            - string
        - id: source
          description: 新数据透视表的源数据，可以是区域（或包含工作表名称的字符串地址）或表。
          type:
            - 'excel!Excel.PivotTableCollection#add~0:complex'
        - id: destination
          description: 数据透视表目标区域（工作表中用于放置所生成的报表的区域）左上角的单元格。
          type:
            - 'excel!Excel.PivotTableCollection#add~1:complex'
  - uid: 'excel!Excel.PivotTableCollection#getCount:member(1)'
    summary: 获取集合中的数据透视表的数量。
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'excel!Excel.PivotTableCollection#getItem:member(1)'
    summary: 按名称获取 PivotTable 对象。
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:interface'
        description: ''
      parameters:
        - id: name
          description: 要检索的数据透视表的名称。
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
    summary: 按 PivotTable 对象的名称获取此对象。 如果没有 PivotTable 对象，将返回 NULL 对象。
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:interface'
        description: ''
      parameters:
        - id: name
          description: 要检索的数据透视表的名称。
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在 `context.sync()` 读取属性之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
    summary: 刷新集合中的所有数据透视表。
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
references:
  - uid: 'excel!Excel.PivotTable:interface'
    name: PivotTable
    fullName: Excel.PivotTable
  - uid: 'excel!Excel.PivotTableCollection#add~0:complex'
    name: Range | string | Table
    fullName: Excel.Range | string | Excel.Table
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string | '
        fullName: ' | string | '
      - uid: 'excel!Excel.Table:interface'
        name: Table
        fullName: Excel.Table
  - uid: 'excel!Excel.PivotTableCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: |2-
           | string
                  
        fullName: |2-
           | string