### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartSeries:interface'
    summary: 代表图表上的系列。
    name: Excel.ChartSeries
    fullName: Excel.ChartSeries
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ChartSeries#axisGroup:member'
      - 'excel!Excel.ChartSeries#binOptions:member'
      - 'excel!Excel.ChartSeries#boxwhiskerOptions:member'
      - 'excel!Excel.ChartSeries#bubbleScale:member'
      - 'excel!Excel.ChartSeries#chartType:member'
      - 'excel!Excel.ChartSeries#dataLabels:member'
      - 'excel!Excel.ChartSeries#delete:member(1)'
      - 'excel!Excel.ChartSeries#doughnutHoleSize:member'
      - 'excel!Excel.ChartSeries#explosion:member'
      - 'excel!Excel.ChartSeries#filtered:member'
      - 'excel!Excel.ChartSeries#firstSliceAngle:member'
      - 'excel!Excel.ChartSeries#format:member'
      - 'excel!Excel.ChartSeries#gapWidth:member'
      - 'excel!Excel.ChartSeries#gradientMaximumColor:member'
      - 'excel!Excel.ChartSeries#gradientMaximumType:member'
      - 'excel!Excel.ChartSeries#gradientMaximumValue:member'
      - 'excel!Excel.ChartSeries#gradientMidpointColor:member'
      - 'excel!Excel.ChartSeries#gradientMidpointType:member'
      - 'excel!Excel.ChartSeries#gradientMidpointValue:member'
      - 'excel!Excel.ChartSeries#gradientMinimumColor:member'
      - 'excel!Excel.ChartSeries#gradientMinimumType:member'
      - 'excel!Excel.ChartSeries#gradientMinimumValue:member'
      - 'excel!Excel.ChartSeries#gradientStyle:member'
      - 'excel!Excel.ChartSeries#hasDataLabels:member'
      - 'excel!Excel.ChartSeries#invertColor:member'
      - 'excel!Excel.ChartSeries#invertIfNegative:member'
      - 'excel!Excel.ChartSeries#load:member(1)'
      - 'excel!Excel.ChartSeries#mapOptions:member'
      - 'excel!Excel.ChartSeries#markerBackgroundColor:member'
      - 'excel!Excel.ChartSeries#markerForegroundColor:member'
      - 'excel!Excel.ChartSeries#markerSize:member'
      - 'excel!Excel.ChartSeries#markerStyle:member'
      - 'excel!Excel.ChartSeries#name:member'
      - 'excel!Excel.ChartSeries#overlap:member'
      - 'excel!Excel.ChartSeries#parentLabelStrategy:member'
      - 'excel!Excel.ChartSeries#plotOrder:member'
      - 'excel!Excel.ChartSeries#points:member'
      - 'excel!Excel.ChartSeries#secondPlotSize:member'
      - 'excel!Excel.ChartSeries#setBubbleSizes:member(1)'
      - 'excel!Excel.ChartSeries#setValues:member(1)'
      - 'excel!Excel.ChartSeries#setXAxisValues:member(1)'
      - 'excel!Excel.ChartSeries#showConnectorLines:member'
      - 'excel!Excel.ChartSeries#showLeaderLines:member'
      - 'excel!Excel.ChartSeries#showShadow:member'
      - 'excel!Excel.ChartSeries#smooth:member'
      - 'excel!Excel.ChartSeries#splitType:member'
      - 'excel!Excel.ChartSeries#splitValue:member'
      - 'excel!Excel.ChartSeries#trendlines:member'
      - 'excel!Excel.ChartSeries#varyByCategories:member'
      - 'excel!Excel.ChartSeries#xErrorBars:member'
      - 'excel!Excel.ChartSeries#yErrorBars:member'
  - uid: 'excel!Excel.ChartSeries#axisGroup:member'
    summary: 指定指定系列的组。
    name: axisGroup
    fullName: axisGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisGroup: ChartAxisGroup;'
      return:
        type:
          - 'excel!Excel.ChartAxisGroup:enum'
  - uid: 'excel!Excel.ChartSeries#binOptions:member'
    summary: 封装直方图和排列图的容器选项。
    name: binOptions
    fullName: binOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly binOptions: ChartBinOptions;'
      return:
        type:
          - 'excel!Excel.ChartBinOptions:interface'
  - uid: 'excel!Excel.ChartSeries#boxwhiskerOptions:member'
    summary: 封装箱形图的选项。
    name: boxwhiskerOptions
    fullName: boxwhiskerOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly boxwhiskerOptions: ChartBoxwhiskerOptions;'
      return:
        type:
          - 'excel!Excel.ChartBoxwhiskerOptions:interface'
  - uid: 'excel!Excel.ChartSeries#bubbleScale:member'
    summary: 这可以是从 0（零）到 300 的整数值，表示默认大小的百分比。 该属性仅适用于气泡图。
    name: bubbleScale
    fullName: bubbleScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bubbleScale: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#chartType:member'
    summary: 表示系列的图表类型。 有关详细信息，请参阅 ChartType。
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: ChartType;'
      return:
        type:
          - 'excel!Excel.ChartType:enum'
  - uid: 'excel!Excel.ChartSeries#dataLabels:member'
    summary: 表示系列中所有数据标签的集合。
    name: dataLabels
    fullName: dataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataLabels: ChartDataLabels;'
      return:
        type:
          - 'excel!Excel.ChartDataLabels:interface'
  - uid: 'excel!Excel.ChartSeries#delete:member(1)'
    summary: 删除 chart series 对象。
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
            let sheet = context.workbook.worksheets.getItem("Sample");
            let seriesCollection = sheet.charts.getItemAt(0).series;
            seriesCollection.load("count");
            await context.sync();

            if (seriesCollection.count > 0) {
              let series = seriesCollection.getItemAt(0);

              // Delete the first series.
              series.delete();
            }

            await context.sync();
          }
          ```
  - uid: 'excel!Excel.ChartSeries#doughnutHoleSize:member'
    summary: 表示图表系列的圆环孔大小。 仅对圆环图和分离型圆环图有效。 对无效图表引发无效参数异常。
    name: doughnutHoleSize
    fullName: doughnutHoleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doughnutHoleSize: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#explosion:member'
    summary: 指定饼图或圆环图切片的爆炸值。 如果未分解（切片尖端位于饼图中心），则返回 0（零）。
    name: explosion
    fullName: explosion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'explosion: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#filtered:member'
    summary: 指定是否筛选系列。 不适用于曲面图。
    name: filtered
    fullName: filtered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filtered: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#firstSliceAngle:member'
    summary: 指定第一个饼图或圆环图的扇区的角度（以度为单位（从垂直方向顺时针方向）。 只适用于饼图、三维饼图和圆环图。 可以是 0 到 360 之间的值。
    name: firstSliceAngle
    fullName: firstSliceAngle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstSliceAngle: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#format:member'
    summary: 表示图表系列的格式，包括填充和线条格式。
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: ChartSeriesFormat;'
      return:
        type:
          - 'excel!Excel.ChartSeriesFormat:interface'
  - uid: 'excel!Excel.ChartSeries#gapWidth:member'
    summary: 表示图表系列的间隙宽度。 仅对条形图和柱形图有效，以及折线图和饼图的特定类。 对无效图表引发无效参数异常。
    name: gapWidth
    fullName: gapWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gapWidth: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#gradientMaximumColor:member'
    summary: 指定区域地图图表系列的最大值的颜色。
    name: gradientMaximumColor
    fullName: gradientMaximumColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMaximumColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartSeries#gradientMaximumType:member'
    summary: 指定区域地图图表系列的最大值的类型。
    name: gradientMaximumType
    fullName: gradientMaximumType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMaximumType: ChartGradientStyleType;'
      return:
        type:
          - 'excel!Excel.ChartGradientStyleType:enum'
  - uid: 'excel!Excel.ChartSeries#gradientMaximumValue:member'
    summary: 指定区域地图图表系列的最大值。
    name: gradientMaximumValue
    fullName: gradientMaximumValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMaximumValue: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#gradientMidpointColor:member'
    summary: 指定区域地图图表系列的中点值的颜色。
    name: gradientMidpointColor
    fullName: gradientMidpointColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMidpointColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartSeries#gradientMidpointType:member'
    summary: 指定区域地图图表系列的中点值的类型。
    name: gradientMidpointType
    fullName: gradientMidpointType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMidpointType: ChartGradientStyleType;'
      return:
        type:
          - 'excel!Excel.ChartGradientStyleType:enum'
  - uid: 'excel!Excel.ChartSeries#gradientMidpointValue:member'
    summary: 指定区域地图图表系列的中点值。
    name: gradientMidpointValue
    fullName: gradientMidpointValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMidpointValue: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#gradientMinimumColor:member'
    summary: 指定区域地图图表系列的最小值的颜色。
    name: gradientMinimumColor
    fullName: gradientMinimumColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMinimumColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartSeries#gradientMinimumType:member'
    summary: 指定区域地图图表系列的最小值的类型。
    name: gradientMinimumType
    fullName: gradientMinimumType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMinimumType: ChartGradientStyleType;'
      return:
        type:
          - 'excel!Excel.ChartGradientStyleType:enum'
  - uid: 'excel!Excel.ChartSeries#gradientMinimumValue:member'
    summary: 指定区域地图图表系列的最小值。
    name: gradientMinimumValue
    fullName: gradientMinimumValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMinimumValue: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#gradientStyle:member'
    summary: 指定区域地图图表的系列渐变样式。
    name: gradientStyle
    fullName: gradientStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientStyle: ChartGradientStyle;'
      return:
        type:
          - 'excel!Excel.ChartGradientStyle:enum'
  - uid: 'excel!Excel.ChartSeries#hasDataLabels:member'
    summary: 指定该系列是否具有数据标签。
    name: hasDataLabels
    fullName: hasDataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasDataLabels: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#invertColor:member'
    summary: 指定系列中的负数据点的填充颜色。
    name: invertColor
    fullName: invertColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'invertColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartSeries#invertIfNegative:member'
    summary: 如此如果当 Excel 中的模式与一个负数相对应时反转该模式。
    name: invertIfNegative
    fullName: invertIfNegative
    langs:
      - typeScript
    type: property
    syntax:
      content: 'invertIfNegative: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在 `context.sync()` 读取属性之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartSeries#mapOptions:member'
    summary: 封装区域地图图表的选项。
    name: mapOptions
    fullName: mapOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly mapOptions: ChartMapOptions;'
      return:
        type:
          - 'excel!Excel.ChartMapOptions:interface'
  - uid: 'excel!Excel.ChartSeries#markerBackgroundColor:member'
    summary: 指定图表系列的标记背景色。
    name: markerBackgroundColor
    fullName: markerBackgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerBackgroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.ChartSeries#markerForegroundColor:member'
    summary: 指定图表系列的标记前景色。
    name: markerForegroundColor
    fullName: markerForegroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerForegroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.ChartSeries#markerSize:member'
    summary: 指定图表系列的标记大小。
    name: markerSize
    fullName: markerSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerSize: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.ChartSeries#markerStyle:member'
    summary: 指定图表系列的标记样式。 有关详细信息，请参阅 ChartMarkerStyle。
    name: markerStyle
    fullName: markerStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerStyle: ChartMarkerStyle;'
      return:
        type:
          - 'excel!Excel.ChartMarkerStyle:enum'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.ChartSeries#name:member'
    summary: 指定图表中系列的名称。
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartSeries#overlap:member'
    summary: 指定条柱的摆放方式。 可以是–100到100之间的值。 只适用于二维条形图和二维柱形图。
    name: overlap
    fullName: overlap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overlap: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#parentLabelStrategy:member'
    summary: 指定树状图图表的系列父标签策略区域。
    name: parentLabelStrategy
    fullName: parentLabelStrategy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parentLabelStrategy: ChartParentLabelStrategy;'
      return:
        type:
          - 'excel!Excel.ChartParentLabelStrategy:enum'
  - uid: 'excel!Excel.ChartSeries#plotOrder:member'
    summary: 指定图表系列在图表组中的绘制顺序。
    name: plotOrder
    fullName: plotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotOrder: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#points:member'
    summary: 返回系列中所有数据点的集合。
    name: points
    fullName: points
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly points: ChartPointsCollection;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection:interface'
  - uid: 'excel!Excel.ChartSeries#secondPlotSize:member'
    summary: 指定复合饼图或复合条饼图条形图的第二部分的大小，以主饼图大小的百分比形式表示。 可以是 5 到 200 之间的值。
    name: secondPlotSize
    fullName: secondPlotSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'secondPlotSize: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#setBubbleSizes:member(1)'
    summary: 设置图表系列的气泡大小。 仅适用于气泡图。
    name: setBubbleSizes(sourceData)
    fullName: setBubbleSizes(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: 对应于源数据的 Range 对象。
          type:
            - 'excel!Excel.Range:interface'
  - uid: 'excel!Excel.ChartSeries#setValues:member(1)'
    summary: 设置图表系列的值。 对于散点图，它表示 Y 轴的值。
    name: setValues(sourceData)
    fullName: setValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
            let sheet = context.workbook.worksheets.getItem("Sample");

            let seriesCollection = sheet.charts.getItemAt(0);
            let rangeSelection = sheet.getRange("C2:C7");
            let xRangeSelection = sheet.getRange("A1:A7");

            // Add a series.
            let newSeries = seriesCollection.series.add("Qtr2");
            newSeries.setValues(rangeSelection);
            newSeries.setXAxisValues(xRangeSelection);

            await context.sync();
          }
          ```
      parameters:
        - id: sourceData
          description: 对应于源数据的 Range 对象。
          type:
            - 'excel!Excel.Range:interface'
  - uid: 'excel!Excel.ChartSeries#setXAxisValues:member(1)'
    summary: 设置图表系列的 X 轴的值。 仅适用于散点图。
    name: setXAxisValues(sourceData)
    fullName: setXAxisValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: 对应于源数据的 Range 对象。
          type:
            - 'excel!Excel.Range:interface'
  - uid: 'excel!Excel.ChartSeries#showConnectorLines:member'
    summary: 指定是否在瀑布图中显示连接符线。
    name: showConnectorLines
    fullName: showConnectorLines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showConnectorLines: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#showLeaderLines:member'
    summary: 指定是否为系列中的每个数据标签显示引导线。
    name: showLeaderLines
    fullName: showLeaderLines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showLeaderLines: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#showShadow:member'
    summary: 指定系列是否具有阴影。
    name: showShadow
    fullName: showShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showShadow: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#smooth:member'
    summary: 指定系列是否平滑。 仅适用于折线图和散点图。
    name: smooth
    fullName: smooth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'smooth: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#splitType:member'
    summary: 指定拆分复合饼图或复合条饼图条形图的两个部分的方式。
    name: splitType
    fullName: splitType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'splitType: ChartSplitType;'
      return:
        type:
          - 'excel!Excel.ChartSplitType:enum'
  - uid: 'excel!Excel.ChartSeries#splitValue:member'
    summary: 指定用于分隔复合饼图或复合条饼图中的两个节的临界值。
    name: splitValue
    fullName: splitValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'splitValue: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#trendlines:member'
    summary: 系列中趋势线的集合。
    name: trendlines
    fullName: trendlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly trendlines: ChartTrendlineCollection;'
      return:
        type:
          - 'excel!Excel.ChartTrendlineCollection:interface'
  - uid: 'excel!Excel.ChartSeries#varyByCategories:member'
    summary: 如此如果 Excel 为每个数据标记分配不同的颜色或图案。 图表必须只包含一个系列。
    name: varyByCategories
    fullName: varyByCategories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'varyByCategories: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#xErrorBars:member'
    summary: 表示图表系列的误差线对象。
    name: xErrorBars
    fullName: xErrorBars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly xErrorBars: ChartErrorBars;'
      return:
        type:
          - 'excel!Excel.ChartErrorBars:interface'
  - uid: 'excel!Excel.ChartSeries#yErrorBars:member'
    summary: 表示图表系列的误差线对象。
    name: yErrorBars
    fullName: yErrorBars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly yErrorBars: ChartErrorBars;'
      return:
        type:
          - 'excel!Excel.ChartErrorBars:interface'
references:
  - uid: 'excel!Excel.ChartAxisGroup:enum'
    name: ChartAxisGroup
    fullName: Excel.ChartAxisGroup
  - uid: 'excel!Excel.ChartBinOptions:interface'
    name: ChartBinOptions
    fullName: Excel.ChartBinOptions
  - uid: 'excel!Excel.ChartBoxwhiskerOptions:interface'
    name: ChartBoxwhiskerOptions
    fullName: Excel.ChartBoxwhiskerOptions
  - uid: 'excel!Excel.ChartType:enum'
    name: ChartType
    fullName: Excel.ChartType
  - uid: 'excel!Excel.ChartDataLabels:interface'
    name: ChartDataLabels
    fullName: Excel.ChartDataLabels
  - uid: 'excel!Excel.ChartSeriesFormat:interface'
    name: ChartSeriesFormat
    fullName: Excel.ChartSeriesFormat
  - uid: 'excel!Excel.ChartGradientStyleType:enum'
    name: ChartGradientStyleType
    fullName: Excel.ChartGradientStyleType
  - uid: 'excel!Excel.ChartGradientStyle:enum'
    name: ChartGradientStyle
    fullName: Excel.ChartGradientStyle
  - uid: 'excel!Excel.ChartMapOptions:interface'
    name: ChartMapOptions
    fullName: Excel.ChartMapOptions
  - uid: 'excel!Excel.ChartMarkerStyle:enum'
    name: ChartMarkerStyle
    fullName: Excel.ChartMarkerStyle
  - uid: 'excel!Excel.ChartParentLabelStrategy:enum'
    name: ChartParentLabelStrategy
    fullName: Excel.ChartParentLabelStrategy
  - uid: 'excel!Excel.ChartPointsCollection:interface'
    name: ChartPointsCollection
    fullName: Excel.ChartPointsCollection
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.ChartSplitType:enum'
    name: ChartSplitType
    fullName: Excel.ChartSplitType
  - uid: 'excel!Excel.ChartTrendlineCollection:interface'
    name: ChartTrendlineCollection
    fullName: Excel.ChartTrendlineCollection
  - uid: 'excel!Excel.ChartErrorBars:interface'
    name: ChartErrorBars
    fullName: Excel.ChartErrorBars