### YamlMime:TSType
name: Excel.NamedItem
uid: excel!Excel.NamedItem:interface
package: excel!
fullName: Excel.NamedItem
summary: 表示单元格区域或值的定义名称。 名称可以是基元命名的对象 (如下面的类型) 、range 对象或对区域的引用所示。 此对象可用于获取与名称相关的 range 对象。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: arrayValues
  uid: excel!Excel.NamedItem#arrayValues:member
  package: excel!
  fullName: arrayValues
  summary: 返回包含已命名项目的值和类型的对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly arrayValues: NamedItemArrayValues;'
    return:
      type: <xref uid="excel!Excel.NamedItemArrayValues:interface" />
- name: comment
  uid: excel!Excel.NamedItem#comment:member
  package: excel!
  fullName: comment
  summary: 指定与此名称关联的注释。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'comment: string;'
    return:
      type: string
- name: formula
  uid: excel!Excel.NamedItem#formula:member
  package: excel!
  fullName: formula
  summary: 已命名项的公式。 公式始终以等号 (=) 开头。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula: any;'
    return:
      type: any
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    let myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        console.log(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n}\n```"
- name: name
  uid: excel!Excel.NamedItem#name:member
  package: excel!
  fullName: name
  summary: 对象的名称。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: scope
  uid: excel!Excel.NamedItem#scope:member
  package: excel!
  fullName: scope
  summary: 指定名称的范围是工作簿还是特定工作表。 可能的值为：工作表、工作簿。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly scope: NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type: <xref uid="excel!Excel.NamedItemScope:enum" /> | "Worksheet" | "Workbook"
- name: type
  uid: excel!Excel.NamedItem#type:member
  package: excel!
  fullName: type
  summary: 指定由名称的公式返回的值的类型。 有关详细信息，请参阅 NamedItemType。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      readonly type:
                  | NamedItemType
                  | "String"
                  | "Integer"
                  | "Double"
                  | "Boolean"
                  | "Range"
                  | "Error"
                  | "Array";
    return:
      type: >-
        | <xref uid="excel!Excel.NamedItemType:enum" />
                    | "String"
                    | "Integer"
                    | "Double"
                    | "Boolean"
                    | "Range"
                    | "Error"
                    | "Array"
- name: value
  uid: excel!Excel.NamedItem#value:member
  package: excel!
  fullName: value
  summary: 表示 name 公式计算出的值。 对于已命名区域，将返回区域地址。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly value: any;'
    return:
      type: any
- name: visible
  uid: excel!Excel.NamedItem#visible:member
  package: excel!
  fullName: visible
  summary: 指定对象是否可见。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'visible: boolean;'
    return:
      type: boolean
- name: worksheet
  uid: excel!Excel.NamedItem#worksheet:member
  package: excel!
  fullName: worksheet
  summary: 返回已命名项限定到的工作表。 如果项目的作用域改为工作簿，则会引发错误。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
- name: worksheetOrNullObject
  uid: excel!Excel.NamedItem#worksheetOrNullObject:member
  package: excel!
  fullName: worksheetOrNullObject
  summary: 返回已命名项限定到的工作表。 如果项改为限定到工作簿，将返回 NULL 对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheetOrNullObject: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
methods:
- name: delete()
  uid: excel!Excel.NamedItem#delete:member(1)
  package: excel!
  fullName: delete()
  summary: 删除给定的名称。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n}\n```"
- name: getRange()
  uid: excel!Excel.NamedItem#getRange:member(1)
  package: excel!
  fullName: getRange()
  summary: 返回与名称相关联的 Range 对象。 如果已命名项的类型不是 Range，将引发错误。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRangeOrNullObject()
  uid: excel!Excel.NamedItem#getRangeOrNullObject:member(1)
  package: excel!
  fullName: getRangeOrNullObject()
  summary: 返回与名称相关联的 Range 对象。 如果已命名项的类型不是 Range，将返回 NULL 对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeOrNullObject(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.NamedItem#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 997de6c6512e3f455b29d74df0acc11e054a7739
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49419899"
