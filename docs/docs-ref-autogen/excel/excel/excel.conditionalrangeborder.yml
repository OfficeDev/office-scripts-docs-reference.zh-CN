### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeBorder:class'
    summary: 代表对象的边框。
    name: Excel.ConditionalRangeBorder
    fullName: Excel.ConditionalRangeBorder
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeBorder#color:member'
      - 'excel!Excel.ConditionalRangeBorder#context:member'
      - 'excel!Excel.ConditionalRangeBorder#load:member(1)'
      - 'excel!Excel.ConditionalRangeBorder#load:member(2)'
      - 'excel!Excel.ConditionalRangeBorder#set:member(1)'
      - 'excel!Excel.ConditionalRangeBorder#sideIndex:member'
      - 'excel!Excel.ConditionalRangeBorder#style:member'
  - uid: 'excel!Excel.ConditionalRangeBorder#color:member'
    summary: '代表\#RRGGBB （例如 "FFA500"）或命名的 HTML 颜色（例如 "橙色"）的边框线条颜色的 HTML 颜色代码。'
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalRangeBorder#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeBorder;
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalRangeBorder#set:member(1)'
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeBorder): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeBorder:class'
  - uid: 'excel!Excel.ConditionalRangeBorder#sideIndex:member'
    summary: 指示边框的特定边的常量值。 有关详细信息，请参阅 ConditionalRangeBorderIndex。 只读。
    name: sideIndex
    fullName: sideIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sideIndex: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder#sideIndex~0:complex'
  - uid: 'excel!Excel.ConditionalRangeBorder#style:member'
    summary: 线条样式的常量之一，指定边框的线条样式。 有关详细信息，请参阅 BorderLineStyle。
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder#style~0:complex'
references:
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.ConditionalRangeBorder:class'
    name: ConditionalRangeBorder
    fullName: Excel.ConditionalRangeBorder
  - uid: 'excel!Excel.ConditionalRangeBorder#sideIndex~0:complex'
    name: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
    fullName: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeBorderIndex:enum'
        name: Excel.ConditionalRangeBorderIndex
        fullName: Excel.ConditionalRangeBorderIndex
      - name: ' | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"'
        fullName: ' | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"'
  - uid: 'excel!Excel.ConditionalRangeBorder#style~0:complex'
    name: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
    fullName: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeBorderLineStyle:enum'
        name: Excel.ConditionalRangeBorderLineStyle
        fullName: Excel.ConditionalRangeBorderLineStyle
      - name: ' | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"'
        fullName: ' | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"'