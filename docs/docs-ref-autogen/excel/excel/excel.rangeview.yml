### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeView:class'
    summary: RangeView 表示父范围的一组可见单元格。
    name: Excel.RangeView
    fullName: Excel.RangeView
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.RangeView#cellAddresses:member'
      - 'excel!Excel.RangeView#columnCount:member'
      - 'excel!Excel.RangeView#context:member'
      - 'excel!Excel.RangeView#formulas:member'
      - 'excel!Excel.RangeView#formulasLocal:member'
      - 'excel!Excel.RangeView#formulasR1C1:member'
      - 'excel!Excel.RangeView#getRange:member(1)'
      - 'excel!Excel.RangeView#index:member'
      - 'excel!Excel.RangeView#load:member(1)'
      - 'excel!Excel.RangeView#load:member(2)'
      - 'excel!Excel.RangeView#numberFormat:member'
      - 'excel!Excel.RangeView#rowCount:member'
      - 'excel!Excel.RangeView#rows:member'
      - 'excel!Excel.RangeView#set:member(1)'
      - 'excel!Excel.RangeView#text:member'
      - 'excel!Excel.RangeView#values:member'
      - 'excel!Excel.RangeView#valueTypes:member'
  - uid: 'excel!Excel.RangeView#cellAddresses:member'
    summary: 表示 RangeView 的单元格地址。 只读。
    name: cellAddresses
    fullName: cellAddresses
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellAddresses: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#columnCount:member'
    summary: 返回可见列数。 只读。
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeView#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeView#formulas:member'
    summary: 表示采用 A1 表示法的公式。
    name: formulas
    fullName: formulas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulas: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#formulasLocal:member'
    summary: '表示采用 A1 表示法的公式，使用用户语言和数字格式区域设置。例如，英语中的公式 "=SUM(A1, 1.5)" 在德语中变为 "=SUMME(A1; 1,5)"。'
    name: formulasLocal
    fullName: formulasLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulasLocal: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#formulasR1C1:member'
    summary: 表示采用 R1C1 样式表示法的公式。
    name: formulasR1C1
    fullName: formulasR1C1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulasR1C1: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#getRange:member(1)'
    summary: 获取与当前 RangeView 相关联的父 range。
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.RangeView#index:member'
    summary: 返回表示 RangeView 的索引的值。 只读。
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeView#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeView;'
      return:
        type:
          - 'excel!Excel.RangeView:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeView#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.RangeView;
      return:
        type:
          - 'excel!Excel.RangeView:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.RangeView#numberFormat:member'
    summary: 表示 Excel 中指定单元格的数字格式代码。
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#rowCount:member'
    summary: 返回可见行数。 只读。
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeView#rows:member'
    summary: 表示一组与 range 相关联的 RangeView。 只读。
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.RangeViewCollection;'
      return:
        type:
          - 'excel!Excel.RangeViewCollection:class'
  - uid: 'excel!Excel.RangeView#set:member(1)'
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeView): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.RangeView:class'
  - uid: 'excel!Excel.RangeView#text:member'
    summary: '指定区域的文本值。 文本值与单元格宽度无关。 Excel \# UI 中发生的符号替换不会影响 API 返回的文本值。 只读。'
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string[][];'
      return:
        type:
          - 'string[][]'
  - uid: 'excel!Excel.RangeView#values:member'
    summary: 表示指定的 RangeView 的原始值。 返回的数据可能是字符串、数字，也可能是布尔值。 包含错误的单元格将返回错误字符串。
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#valueTypes:member'
    summary: 表示每个单元格的数据类型。 只读。
    name: valueTypes
    fullName: valueTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly valueTypes: Excel.RangeValueType[][];'
      return:
        type:
          - 'excel!Excel.RangeView#valueTypes~0:complex'
references:
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.RangeView:class'
    name: RangeView
    fullName: Excel.RangeView
  - uid: 'excel!Excel.RangeViewCollection:class'
    name: RangeViewCollection
    fullName: Excel.RangeViewCollection
  - uid: 'excel!Excel.RangeView#valueTypes~0:complex'
    name: 'Excel.RangeValueType[][]'
    fullName: 'Excel.RangeValueType[][]'
    spec.typeScript:
      - uid: 'excel!Excel.RangeValueType:enum'
        name: Excel.RangeValueType
        fullName: Excel.RangeValueType
      - name: '[][]'
        fullName: '[][]'