### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PageBreakCollection:class'
    name: Excel.PageBreakCollection
    fullName: Excel.PageBreakCollection
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.PageBreakCollection#add:member(1)'
      - 'excel!Excel.PageBreakCollection#context:member'
      - 'excel!Excel.PageBreakCollection#getCount:member(1)'
      - 'excel!Excel.PageBreakCollection#getItem:member(1)'
      - 'excel!Excel.PageBreakCollection#items:member'
      - 'excel!Excel.PageBreakCollection#load:member(1)'
      - 'excel!Excel.PageBreakCollection#removePageBreaks:member(1)'
  - uid: 'excel!Excel.PageBreakCollection#add:member(1)'
    summary: 在指定区域的左上角单元格之前添加分页符。
    name: add(pageBreakRange)
    fullName: add(pageBreakRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(pageBreakRange: Range | string): Excel.PageBreak;'
      return:
        type:
          - 'excel!Excel.PageBreak:class'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.horizontalPageBreaks.add("A21:E21");
              await context.sync();
          }
          ```
      parameters:
        - id: pageBreakRange
          description: 紧跟在要添加的分页符之后的区域。
          type:
            - 'excel!Excel.PageBreakCollection#add~0:complex'
  - uid: 'excel!Excel.PageBreakCollection#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PageBreakCollection#getCount:member(1)'
    summary: 获取集合中的分页符数量。
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.PageBreakCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.PageBreakCollection#getItem:member(1)'
    summary: 通过索引获取分页符对象。
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number): Excel.PageBreak;'
      return:
        type:
          - 'excel!Excel.PageBreak:class'
        description: ''
      parameters:
        - id: index
          description: 分页符的索引。
          type:
            - number
  - uid: 'excel!Excel.PageBreakCollection#items:member'
    summary: 获取此集合中已加载的子项。
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PageBreak[];'
      return:
        type:
          - 'excel!Excel.PageBreakCollection#items~0:complex'
  - uid: 'excel!Excel.PageBreakCollection#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PageBreakCollection;'
      return:
        type:
          - 'excel!Excel.PageBreakCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PageBreakCollection#removePageBreaks:member(1)'
    summary: 重置集合中的所有手动分页符。
    name: removePageBreaks()
    fullName: removePageBreaks()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removePageBreaks(): void;'
      return:
        type:
          - void
        description: ''
references:
  - uid: 'excel!Excel.PageBreak:class'
    name: PageBreak
    fullName: Excel.PageBreak
  - uid: 'excel!Excel.PageBreakCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.PageBreakCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.PageBreakCollection#items~0:complex'
    name: 'Excel.PageBreak[]'
    fullName: 'Excel.PageBreak[]'
    spec.typeScript:
      - uid: 'excel!Excel.PageBreak:class'
        name: Excel.PageBreak
        fullName: Excel.PageBreak
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.PageBreakCollection:class'
    name: PageBreakCollection
    fullName: Excel.PageBreakCollection