### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SettingCollection:class'
    summary: 表示作为工作簿一部分的键值对设置对象的集合。 作用域限制为每个文件和加载项（任务窗格或内容）组合。
    name: Excel.SettingCollection
    fullName: Excel.SettingCollection
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.SettingCollection#add:member(1)'
      - 'excel!Excel.SettingCollection#context:member'
      - 'excel!Excel.SettingCollection#getCount:member(1)'
      - 'excel!Excel.SettingCollection#getItem:member(1)'
      - 'excel!Excel.SettingCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.SettingCollection#items:member'
      - 'excel!Excel.SettingCollection#load:member(1)'
  - uid: 'excel!Excel.SettingCollection#add:member(1)'
    summary: 设置指定的 Setting 对象，或将其添加到工作簿中。
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: key
          description: 新设置的键。
          type:
            - string
        - id: value
          description: 新设置的值。
          type:
            - 'excel!Excel.SettingCollection#add~0:complex'
  - uid: 'excel!Excel.SettingCollection#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.SettingCollection#getCount:member(1)'
    summary: 获取集合中的 Setting 对象的数量。
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.SettingCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.SettingCollection#getItem:member(1)'
    summary: 按键获取 Setting 项。
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: key
          description: 设置的键。
          type:
            - string
  - uid: 'excel!Excel.SettingCollection#getItemOrNullObject:member(1)'
    summary: 按键获取 Setting 项。 如果没有 Setting 项，将返回 NULL 对象。
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          }
          ```
      parameters:
        - id: key
          description: 设置的键。
          type:
            - string
  - uid: 'excel!Excel.SettingCollection#items:member'
    summary: 获取此集合中已加载的子项。
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Setting[];'
      return:
        type:
          - 'excel!Excel.SettingCollection#items~0:complex'
  - uid: 'excel!Excel.SettingCollection#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.Setting:class'
    name: Setting
    fullName: Excel.Setting
  - uid: 'excel!Excel.SettingCollection#add~0:complex'
    name: string | number | boolean | Date | Array<any> | any
    fullName: string | number | boolean | Date | Array<any> | any
    spec.typeScript:
      - name: 'string | number | boolean | '
        fullName: 'string | number | boolean | '
      - uid: '!Date:interface'
        name: Date
        fullName: Date
      - name: ' | '
        fullName: ' | '
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <any> | any
        fullName: <any> | any
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.SettingCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.SettingCollection#items~0:complex'
    name: 'Excel.Setting[]'
    fullName: 'Excel.Setting[]'
    spec.typeScript:
      - uid: 'excel!Excel.Setting:class'
        name: Excel.Setting
        fullName: Excel.Setting
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SettingCollection:class'
    name: SettingCollection
    fullName: Excel.SettingCollection