### YamlMime:TSType
name: ExcelScript.Range
uid: ExcelScript!ExcelScript.Range:interface
package: ExcelScript!
fullName: ExcelScript.Range
summary: 区域表示一个或多个相邻的单元格，如单元格、行、列、单元格块等。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: addConditionalFormat(type)
  uid: ExcelScript!ExcelScript.Range#addConditionalFormat:member(1)
  package: ExcelScript!
  fullName: addConditionalFormat(type)
  summary: 以第一/最高优先级向集合添加新的条件格式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addConditionalFormat(type: ConditionalFormatType): ConditionalFormat;'
    parameters:
    - id: type
      description: 要添加的条件格式的类型。 有关详细信息，请参阅 ExcelScript.ConditionalFormatType。
      type: <xref uid="ExcelScript!ExcelScript.ConditionalFormatType:enum" />
    return:
      type: <xref uid="ExcelScript!ExcelScript.ConditionalFormat:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/**\n * This sample applies conditional formatting to the currently used range in the worksheet. \n * The conditional formatting is a green fill for the top 10% of values.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the current worksheet.\n  let selectedSheet = workbook.getActiveWorksheet();\n\n  // Get the used range in the worksheet.\n  let range = selectedSheet.getUsedRange();\n\n  // Set the fill color to green for the top 10% of values in the range.\n  let conditionalFormat = range.addConditionalFormat(ExcelScript.ConditionalFormatType.topBottom)\n  conditionalFormat.getTopBottom().getFormat().getFill().setColor(\"green\");\n  conditionalFormat.getTopBottom().setRule({\n    rank: 10, // The percentage threshold.\n    type: ExcelScript.ConditionalTopBottomCriterionType.topPercent // The type of the top/bottom condition.\n  });\n}\n```"
- name: autoFill(destinationRange, autoFillType)
  uid: ExcelScript!ExcelScript.Range#autoFill:member(1)
  package: ExcelScript!
  fullName: autoFill(destinationRange, autoFillType)
  summary: 使用指定的自动填充逻辑填充从当前范围到目标区域。 目标区域可以是 null，也可以水平或垂直扩展源。 不支持不连续的范围。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      autoFill(
                  destinationRange?: Range | string,
                  autoFillType?: AutoFillType
              ): void;
    parameters:
    - id: destinationRange
      description: 要自动填充的目标区域。 如果目标区域为 null，则根据周围的单元格填充数据 (这是双击 UI 的范围填充句柄时的行为) 。
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" /> | string
    - id: autoFillType
      description: 自动填充的类型。 指定如何根据当前区域的内容填充目标区域。 默认值为"FillDefault"。
      type: <xref uid="ExcelScript!ExcelScript.AutoFillType:enum" />
    return:
      type: void
      description: ''
- name: calculate()
  uid: ExcelScript!ExcelScript.Range#calculate:member(1)
  package: ExcelScript!
  fullName: calculate()
  summary: 计算工作表上的单元格区域。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(): void;'
    return:
      type: void
      description: ''
- name: clear(applyTo)
  uid: ExcelScript!ExcelScript.Range#clear:member(1)
  package: ExcelScript!
  fullName: clear(applyTo)
  summary: 清除区域值、格式、填充、边框等。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(applyTo?: ClearApplyTo): void;'
    parameters:
    - id: applyTo
      description: 可选。 确定清除操作的类型。 有关详细信息，请参阅 ExcelScript.ClearApplyTo。
      type: <xref uid="ExcelScript!ExcelScript.ClearApplyTo:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/**\n * This script removes all the formatting from the selected range.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the selected range.\n  let range = workbook.getSelectedRange();\n\n  // Clear all the formatting in that range.\n  range.clear(ExcelScript.ClearApplyTo.formats);\n}\n```"
- name: clearAllConditionalFormats()
  uid: ExcelScript!ExcelScript.Range#clearAllConditionalFormats:member(1)
  package: ExcelScript!
  fullName: clearAllConditionalFormats()
  summary: 清除当前指定区域中处于活动状态的所有条件格式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clearAllConditionalFormats(): void;'
    return:
      type: void
      description: ''
- name: convertDataTypeToText()
  uid: ExcelScript!ExcelScript.Range#convertDataTypeToText:member(1)
  package: ExcelScript!
  fullName: convertDataTypeToText()
  summary: 将具有数据类型的区域单元格转换为文本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type: void
      description: ''
- name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  uid: ExcelScript!ExcelScript.Range#copyFrom:member(1)
  package: ExcelScript!
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  summary: 将单元格数据或格式从源区域或 RangeAreas 复制到当前区域。 目标区域的大小可以不同于源区域或 RangeAreas 的大小。 如果目标小于源，将自动扩展目标。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      copyFrom(
                  sourceRange: Range | RangeAreas | string,
                  copyType?: RangeCopyType,
                  skipBlanks?: boolean,
                  transpose?: boolean
              ): void;
    parameters:
    - id: sourceRange
      description: 要复制的源区域或 RangeAreas。 当源 RangeAreas 具有多个区域时，必须通过从矩形区域中删除整行或整列来创建其表单。
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" /> | <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" /> | string
    - id: copyType
      description: 要复制的单元格数据或格式的类型。 默认值为"All"。
      type: <xref uid="ExcelScript!ExcelScript.RangeCopyType:enum" />
    - id: skipBlanks
      description: 如此 如果跳过源范围中的空白单元格。 默认为 false。
      type: boolean
    - id: transpose
      description: 如此 如果转置目标区域单元格。 默认为 false。
      type: boolean
    return:
      type: void
      description: ''
- name: delete(shift)
  uid: ExcelScript!ExcelScript.Range#delete:member(1)
  package: ExcelScript!
  fullName: delete(shift)
  summary: 删除与区域相关的单元格。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(shift: DeleteShiftDirection): void;'
    parameters:
    - id: shift
      description: 指定移动单元格的方式。 有关详细信息，请参阅 ExcelScript.DeleteShiftDirection。
      type: <xref uid="ExcelScript!ExcelScript.DeleteShiftDirection:enum" />
    return:
      type: void
      description: ''
- name: find(text, criteria)
  uid: ExcelScript!ExcelScript.Range#find:member(1)
  package: ExcelScript!
  fullName: find(text, criteria)
  summary: 根据指定的条件查找给定的字符串。 如果当前区域大于单个单元格，则搜索将限制为该范围，否则搜索将覆盖从该单元格之后开始的整个工作表。 如果没有匹配项，则此函数将返回其属性设置为 `isNullObject``true`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'find(text: string, criteria: SearchCriteria): Range;'
    parameters:
    - id: text
      description: 要查找的字符串。
      type: string
    - id: criteria
      description: 其他搜索条件，包括搜索方向以及搜索是否需要匹配整个单元格或区分大小写。
      type: <xref uid="ExcelScript!ExcelScript.SearchCriteria:interface" />
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: flashFill()
  uid: ExcelScript!ExcelScript.Range#flashFill:member(1)
  package: ExcelScript!
  fullName: flashFill()
  summary: 对当前区域进行快速填充。快速填充在感知到模式时可自动填充数据，因此该区域必须是单列区域且周围有数据以便查找模式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'flashFill(): void;'
    return:
      type: void
      description: ''
- name: getAbsoluteResizedRange(numRows, numColumns)
  uid: ExcelScript!ExcelScript.Range#getAbsoluteResizedRange:member(1)
  package: ExcelScript!
  fullName: getAbsoluteResizedRange(numRows, numColumns)
  summary: 获取一个 Range 对象，该对象的左上单元格与当前 Range 对象相同，但具有指定的行数和列数。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAbsoluteResizedRange(numRows: number, numColumns: number): Range;'
    parameters:
    - id: numRows
      description: 新区域大小的行数。
      type: number
    - id: numColumns
      description: 新区域大小的列数。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getAddress()
  uid: ExcelScript!ExcelScript.Range#getAddress:member(1)
  package: ExcelScript!
  fullName: getAddress()
  summary: 指定 A1 样式的范围引用。 地址值将包含工作表引用 (例如，"Sheet1！A1：B4") 。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAddress(): string;'
    return:
      type: string
      description: ''
- name: getAddressLocal()
  uid: ExcelScript!ExcelScript.Range#getAddressLocal:member(1)
  package: ExcelScript!
  fullName: getAddressLocal()
  summary: 以用户语言指定区域的范围引用。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAddressLocal(): string;'
    return:
      type: string
      description: ''
- name: getBoundingRect(anotherRange)
  uid: ExcelScript!ExcelScript.Range#getBoundingRect:member(1)
  package: ExcelScript!
  fullName: getBoundingRect(anotherRange)
  summary: 获取包含指定区域的最小 range 对象。 例如，“B2:C5”和“D10:E15”的 GetBoundingRect 为“B2:E15”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBoundingRect(anotherRange: Range | string): Range;'
    parameters:
    - id: anotherRange
      description: range 对象或地址或区域名称。
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" /> | string
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getCell(row, column)
  uid: ExcelScript!ExcelScript.Range#getCell:member(1)
  package: ExcelScript!
  fullName: getCell(row, column)
  summary: 根据行和列编号获取包含单个单元格的 range 对象。 单元格可以位于父区域外部，只要它保持在工作表网格内即可。 返回的单元格位于相对于区域左上角的单元格的位置。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCell(row: number, column: number): Range;'
    parameters:
    - id: row
      description: 要检索的单元格的行号。 从零开始编制索引。
      type: number
    - id: column
      description: 要检索的单元格的列号。 从零开始编制索引。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getCellCount()
  uid: ExcelScript!ExcelScript.Range#getCellCount:member(1)
  package: ExcelScript!
  fullName: getCellCount()
  summary: 指定区域中的单元格数。 如果单元格数超过 2^31-1 (2,147,483,647)，此 API 返回 -1。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCellCount(): number;'
    return:
      type: number
      description: ''
- name: getColumn(column)
  uid: ExcelScript!ExcelScript.Range#getColumn:member(1)
  package: ExcelScript!
  fullName: getColumn(column)
  summary: 获取范围中包含的列。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumn(column: number): Range;'
    parameters:
    - id: column
      description: 要检索的区域的列号。 从零开始编制索引。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getColumnCount()
  uid: ExcelScript!ExcelScript.Range#getColumnCount:member(1)
  package: ExcelScript!
  fullName: getColumnCount()
  summary: 指定范围中的列总数。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnCount(): number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/**\n * This sample provides the count of negative numbers that are present\n * in the used range of the current worksheet.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the working range.\n  let usedRange = workbook.getActiveWorksheet().getUsedRange();\n  let rowCount = usedRange.getRowCount();\n  let columnCount = usedRange.getColumnCount();\n\n  // Save the values locally to avoid repeatedly asking the workbook.\n  let usedRangeValues = usedRange.getValues();\n\n  // Start the negative number counter.\n  let negativeCount = 0;\n\n  // Iterate over the entire range looking for negative numbers.\n  for (let i = 0; i < rowCount; i++) {\n    for (let j = 0; j < columnCount; j++) {\n      if (usedRangeValues[i][j] < 0) {\n        negativeCount++;\n      }\n    }\n  }\n\n  // Log the negative number count to the console.\n  console.log(negativeCount);\n}\n```"
- name: getColumnHidden()
  uid: ExcelScript!ExcelScript.Range#getColumnHidden:member(1)
  package: ExcelScript!
  fullName: getColumnHidden()
  summary: 表示当前区域中的所有列是否隐藏。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnHidden(): boolean;'
    return:
      type: boolean
      description: ''
- name: getColumnIndex()
  uid: ExcelScript!ExcelScript.Range#getColumnIndex:member(1)
  package: ExcelScript!
  fullName: getColumnIndex()
  summary: 指定范围中第一个单元格的列号。 从零开始编制索引。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnIndex(): number;'
    return:
      type: number
      description: ''
- name: getColumnsAfter(count)
  uid: ExcelScript!ExcelScript.Range#getColumnsAfter:member(1)
  package: ExcelScript!
  fullName: getColumnsAfter(count)
  summary: 获取当前范围对象右侧的一定数量的列。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnsAfter(count?: number): Range;'
    parameters:
    - id: count
      description: 可选。生成的范围中要包含的列数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getColumnsBefore(count)
  uid: ExcelScript!ExcelScript.Range#getColumnsBefore:member(1)
  package: ExcelScript!
  fullName: getColumnsBefore(count)
  summary: 获取当前范围对象左侧的一定数量的列。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnsBefore(count?: number): Range;'
    parameters:
    - id: count
      description: 可选。生成的范围中要包含的列数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getConditionalFormat(id)
  uid: ExcelScript!ExcelScript.Range#getConditionalFormat:member(1)
  package: ExcelScript!
  fullName: getConditionalFormat(id)
  summary: 返回给定 ID 的条件格式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getConditionalFormat(id: string): ConditionalFormat;'
    parameters:
    - id: id
      description: 条件格式的 ID。
      type: string
    return:
      type: <xref uid="ExcelScript!ExcelScript.ConditionalFormat:interface" />
      description: ''
- name: getConditionalFormats()
  uid: ExcelScript!ExcelScript.Range#getConditionalFormats:member(1)
  package: ExcelScript!
  fullName: getConditionalFormats()
  summary: 与区域相交的 ConditionalFormats 集合。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getConditionalFormats(): ConditionalFormat[];'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ConditionalFormat:interface" />[]
      description: ''
- name: getDataValidation()
  uid: ExcelScript!ExcelScript.Range#getDataValidation:member(1)
  package: ExcelScript!
  fullName: getDataValidation()
  summary: 返回数据有效性对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDataValidation(): DataValidation;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.DataValidation:interface" />
      description: ''
- name: getDirectPrecedents()
  uid: ExcelScript!ExcelScript.Range#getDirectPrecedents:member(1)
  package: ExcelScript!
  fullName: getDirectPrecedents()
  summary: 返回一个 WorkbookRangeAreas 对象，该对象代表包含同一工作表或多个工作表中单元格的所有直接引用单元格的范围。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDirectPrecedents(): WorkbookRangeAreas;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.WorkbookRangeAreas:interface" />
      description: ''
- name: getEntireColumn()
  uid: ExcelScript!ExcelScript.Range#getEntireColumn:member(1)
  package: ExcelScript!
  fullName: getEntireColumn()
  summary: 获取一个对象，该对象代表区域 (，例如，如果当前区域代表单元格"B4：E11"，则其区域表示列 `getEntireColumn` "B：E") 。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireColumn(): Range;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getEntireRow()
  uid: ExcelScript!ExcelScript.Range#getEntireRow:member(1)
  package: ExcelScript!
  fullName: getEntireRow()
  summary: 获取一个对象，该对象代表区域整行 (例如，如果当前区域代表单元格"B4：E11"，则其区域表示行 `GetEntireRow` "4：11") 。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireRow(): Range;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getFormat()
  uid: ExcelScript!ExcelScript.Range#getFormat:member(1)
  package: ExcelScript!
  fullName: getFormat()
  summary: 返回一个格式对象，其中封装了区域的字体、填充、边框、对齐方式和其他属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFormat(): RangeFormat;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeFormat:interface" />
      description: ''
- name: getFormula()
  uid: ExcelScript!ExcelScript.Range#getFormula:member(1)
  package: ExcelScript!
  fullName: getFormula()
  summary: 表示用 A1 样式表示法的单元格公式。 如果区域包含多个单元格，则返回第一个单元格区域 (由行索引 0 和列索引 0 表示的数据) 0。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFormula(): string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/*\n * This script sets a cell's formula, \n * then displays how Excel stores the cell's formula and value separately.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  let selectedSheet = workbook.getActiveWorksheet();\n\n  // Set A1 to 2.\n  let a1 = selectedSheet.getRange(\"A1\");\n  a1.setValue(2);\n\n  // Set B1 to the formula =(2*A1), which should equal 4.\n  let b1 = selectedSheet.getRange(\"B1\")\n  b1.setFormula(\"=(2*A1)\");\n\n  // Log the current results for `getFormula` and `getValue` at B1.\n  console.log(`B1 - Formula: ${b1.getFormula()} | Value: ${b1.getValue()}`);\n}\n```"
- name: getFormulaLocal()
  uid: ExcelScript!ExcelScript.Range#getFormulaLocal:member(1)
  package: ExcelScript!
  fullName: getFormulaLocal()
  summary: 表示采用 A1 样式表示法的单元格公式，采用用户的语言和数字格式区域设置。 例如，英语中的公式 "=SUM(A1, 1.5)" 在德语中将变为 "=SUMME(A1; 1,5)"。 如果区域包含多个单元格，则返回第一个单元格区域 (由行索引 0 和列索引 0 表示的数据) 0。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFormulaLocal(): string;'
    return:
      type: string
      description: ''
- name: getFormulaR1C1()
  uid: ExcelScript!ExcelScript.Range#getFormulaR1C1:member(1)
  package: ExcelScript!
  fullName: getFormulaR1C1()
  summary: 表示 R1C1 样式表示法中的单元格公式。 如果区域包含多个单元格，则返回第一个单元格区域 (由行索引 0 和列索引 0 表示的数据) 0。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFormulaR1C1(): string;'
    return:
      type: string
      description: ''
- name: getFormulas()
  uid: ExcelScript!ExcelScript.Range#getFormulas:member(1)
  package: ExcelScript!
  fullName: getFormulas()
  summary: 表示采用 A1 表示法的公式。 如果单元格没有公式，则改为返回其值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFormulas(): string[][];'
    return:
      type: string[][]
      description: ''
- name: getFormulasLocal()
  uid: ExcelScript!ExcelScript.Range#getFormulasLocal:member(1)
  package: ExcelScript!
  fullName: getFormulasLocal()
  summary: 表示采用 A1 样式表示法的公式，使用用户的语言和数字格式区域设置。 例如，英语中的公式 "=SUM(A1, 1.5)" 在德语中将变为 "=SUMME(A1; 1,5)"。 如果单元格没有公式，则改为返回其值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFormulasLocal(): string[][];'
    return:
      type: string[][]
      description: ''
- name: getFormulasR1C1()
  uid: ExcelScript!ExcelScript.Range#getFormulasR1C1:member(1)
  package: ExcelScript!
  fullName: getFormulasR1C1()
  summary: 表示采用 R1C1 样式表示法的公式。 如果单元格没有公式，则改为返回其值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFormulasR1C1(): string[][];'
    return:
      type: string[][]
      description: ''
- name: getHasSpill()
  uid: ExcelScript!ExcelScript.Range#getHasSpill:member(1)
  package: ExcelScript!
  fullName: getHasSpill()
  summary: 表示所有单元格是否都具有溢出边框。 如果所有单元格都有溢出边框，则返回 true;如果所有单元格没有溢出边框，则返回 false。 如果单元格区域内同时存在溢出边框和没有溢出边框，则返回 null。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHasSpill(): boolean;'
    return:
      type: boolean
      description: ''
- name: getHeight()
  uid: ExcelScript!ExcelScript.Range#getHeight:member(1)
  package: ExcelScript!
  fullName: getHeight()
  summary: 返回从区域的上边缘到区域的下边缘的 100％ 缩放的距离（以磅为单位）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHeight(): number;'
    return:
      type: number
      description: ''
- name: getHidden()
  uid: ExcelScript!ExcelScript.Range#getHidden:member(1)
  package: ExcelScript!
  fullName: getHidden()
  summary: 表示当前区域中的所有单元格是否隐藏。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHidden(): boolean;'
    return:
      type: boolean
      description: ''
- name: getHyperlink()
  uid: ExcelScript!ExcelScript.Range#getHyperlink:member(1)
  package: ExcelScript!
  fullName: getHyperlink()
  summary: 表示当前范围的超链接。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHyperlink(): RangeHyperlink;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeHyperlink:interface" />
      description: ''
- name: getImage()
  uid: ExcelScript!ExcelScript.Range#getImage:member(1)
  package: ExcelScript!
  fullName: getImage()
  summary: 将区域呈现为 base64 编码的 png 图像。 **重要** 提示：此 API 当前在 Excel for Mac 中不受支持。 访问 \[ OfficeDev/office-js \# 问题 235 \] (https://github.com/OfficeDev/office-js/issues/235) 当前状态。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getImage(): string;'
    return:
      type: string
      description: ''
- name: getIntersection(anotherRange)
  uid: ExcelScript!ExcelScript.Range#getIntersection:member(1)
  package: ExcelScript!
  fullName: getIntersection(anotherRange)
  summary: 获取表示指定区域的矩形交集的 range 对象。 如果未找到任何交集，则此函数将返回其 `isNullObject` 属性设置为 `true`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersection(anotherRange: Range | string): Range;'
    parameters:
    - id: anotherRange
      description: 将用于确定区域交集的 range 对象或区域地址。
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" /> | string
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getIsEntireColumn()
  uid: ExcelScript!ExcelScript.Range#getIsEntireColumn:member(1)
  package: ExcelScript!
  fullName: getIsEntireColumn()
  summary: 表示当前区域是否为整列。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIsEntireColumn(): boolean;'
    return:
      type: boolean
      description: ''
- name: getIsEntireRow()
  uid: ExcelScript!ExcelScript.Range#getIsEntireRow:member(1)
  package: ExcelScript!
  fullName: getIsEntireRow()
  summary: 表示当前区域是否为整行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIsEntireRow(): boolean;'
    return:
      type: boolean
      description: ''
- name: getLastCell()
  uid: ExcelScript!ExcelScript.Range#getLastCell:member(1)
  package: ExcelScript!
  fullName: getLastCell()
  summary: 获取区域内的最后一个单元格。 例如，“B2:D5”的最后一个单元格是“D5”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLastCell(): Range;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getLastColumn()
  uid: ExcelScript!ExcelScript.Range#getLastColumn:member(1)
  package: ExcelScript!
  fullName: getLastColumn()
  summary: 获取区域内的最后一列。 例如，“B2:D5”的最后一列是“D2:D5”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLastColumn(): Range;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getLastRow()
  uid: ExcelScript!ExcelScript.Range#getLastRow:member(1)
  package: ExcelScript!
  fullName: getLastRow()
  summary: 获取区域内的最后一行。 例如，“B2:D5”的最后一行是“B5:D5”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLastRow(): Range;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getLeft()
  uid: ExcelScript!ExcelScript.Range#getLeft:member(1)
  package: ExcelScript!
  fullName: getLeft()
  summary: 返回从工作表的左边缘到区域的左边缘的 100％ 缩放的距离（以磅为单位）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLeft(): number;'
    return:
      type: number
      description: ''
- name: getLinkedDataTypeState()
  uid: ExcelScript!ExcelScript.Range#getLinkedDataTypeState:member(1)
  package: ExcelScript!
  fullName: getLinkedDataTypeState()
  summary: 表示数据类型状态。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLinkedDataTypeState(): LinkedDataTypeState;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.LinkedDataTypeState:enum" />
      description: ''
- name: getLinkedDataTypeStates()
  uid: ExcelScript!ExcelScript.Range#getLinkedDataTypeStates:member(1)
  package: ExcelScript!
  fullName: getLinkedDataTypeStates()
  summary: 表示每个单元格的数据类型状态。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLinkedDataTypeStates(): LinkedDataTypeState[][];'
    return:
      type: <xref uid="ExcelScript!ExcelScript.LinkedDataTypeState:enum" />[][]
      description: ''
- name: getMergedAreas()
  uid: ExcelScript!ExcelScript.Range#getMergedAreas:member(1)
  package: ExcelScript!
  fullName: getMergedAreas()
  summary: 返回一个 RangeAreas 对象，该对象代表此范围中的合并区域。 请注意，如果此范围内合并的区域数超过 512，API 将无法返回结果。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getMergedAreas(): RangeAreas;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />
      description: ''
- name: getNumberFormat()
  uid: ExcelScript!ExcelScript.Range#getNumberFormat:member(1)
  package: ExcelScript!
  fullName: getNumberFormat()
  summary: 表示给定范围的单元格 Excel 数字格式代码。 如果区域包含多个单元格，则返回第一个单元格区域 (由行索引 0 和列索引 0 表示的数据) 0。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNumberFormat(): string;'
    return:
      type: string
      description: ''
- name: getNumberFormatCategories()
  uid: ExcelScript!ExcelScript.Range#getNumberFormatCategories:member(1)
  package: ExcelScript!
  fullName: getNumberFormatCategories()
  summary: 表示每个单元格的编号格式的类别。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNumberFormatCategories(): NumberFormatCategory[][];'
    return:
      type: <xref uid="ExcelScript!ExcelScript.NumberFormatCategory:enum" />[][]
      description: ''
- name: getNumberFormatLocal()
  uid: ExcelScript!ExcelScript.Range#getNumberFormatLocal:member(1)
  package: ExcelScript!
  fullName: getNumberFormatLocal()
  summary: 表示给定范围的单元格 Excel 数字格式代码，基于用户的语言设置。 Excel 在获取或设置属性时不执行任何语言或格式 `numberFormatLocal` 强制转换。 任何返回的文本都使用基于系统设置中指定的语言的本地格式的字符串。 如果区域包含多个单元格，则返回第一个单元格区域 (由行索引 0 和列索引 0 表示的数据) 0。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNumberFormatLocal(): string;'
    return:
      type: string
      description: ''
- name: getNumberFormats()
  uid: ExcelScript!ExcelScript.Range#getNumberFormats:member(1)
  package: ExcelScript!
  fullName: getNumberFormats()
  summary: 表示给定范围的 Excel 数字格式代码。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNumberFormats(): string[][];'
    return:
      type: string[][]
      description: ''
- name: getNumberFormatsLocal()
  uid: ExcelScript!ExcelScript.Range#getNumberFormatsLocal:member(1)
  package: ExcelScript!
  fullName: getNumberFormatsLocal()
  summary: 表示基于用户的语言设置的给定范围的 Excel 号码格式代码。 Excel 在获取或设置属性时不执行任何语言或格式 `numberFormatLocal` 强制转换。 任何返回的文本都使用基于系统设置中指定的语言的本地格式的字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNumberFormatsLocal(): string[][];'
    return:
      type: string[][]
      description: ''
- name: getOffsetRange(rowOffset, columnOffset)
  uid: ExcelScript!ExcelScript.Range#getOffsetRange:member(1)
  package: ExcelScript!
  fullName: getOffsetRange(rowOffset, columnOffset)
  summary: 获取表示与指定区域偏移的区域的对象。返回的区域的尺寸将与此区域一致。如果强制在工作表网格的边界之外生成区域，将引发错误。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOffsetRange(rowOffset: number, columnOffset: number): Range;'
    parameters:
    - id: rowOffset
      description: 区域偏移的行数（正数、负数或 0）。正数表示向下偏移，负数表示向上偏移。
      type: number
    - id: columnOffset
      description: 区域偏移的列数（正数、负数或 0）。正数表示向右偏移，负数表示向左偏移。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/**\n * This script gets adjacent cells using relative references.\n * Note that if the active cell is on the top row, part of the script fails, \n * because it references the cell above the currently selected one.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the currently active cell in the workbook.\n  let activeCell = workbook.getActiveCell();\n  console.log(`The active cell's address is: ${activeCell.getAddress()}`);\n\n  // Get the cell to the right of the active cell and set its value and color.\n  let rightCell = activeCell.getOffsetRange(0,1);\n  rightCell.setValue(\"Right cell\");\n  console.log(`The right cell's address is: ${rightCell.getAddress()}`);\n  rightCell.getFormat().getFont().setColor(\"Magenta\");\n  rightCell.getFormat().getFill().setColor(\"Cyan\");\n\n  // Get the cell to the above of the active cell and set its value and color.\n  // Note that this operation will fail if the active cell is in the top row.\n  let aboveCell = activeCell.getOffsetRange(-1, 0);\n  aboveCell.setValue(\"Above cell\");\n  console.log(`The above cell's address is: ${aboveCell.getAddress()}`);\n  aboveCell.getFormat().getFont().setColor(\"White\");\n  aboveCell.getFormat().getFill().setColor(\"Black\");\n}\n```"
- name: getPivotTables(fullyContained)
  uid: ExcelScript!ExcelScript.Range#getPivotTables:member(1)
  package: ExcelScript!
  fullName: getPivotTables(fullyContained)
  summary: 获取与区域重叠的数据透视表的作用域集合。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPivotTables(fullyContained?: boolean): PivotTable[];'
    parameters:
    - id: fullyContained
      description: 如果为 true，则仅返回区域边界内完全包含的数据透视表。 默认值为 false。
      type: boolean
    return:
      type: <xref uid="ExcelScript!ExcelScript.PivotTable:interface" />[]
      description: ''
- name: getPredefinedCellStyle()
  uid: ExcelScript!ExcelScript.Range#getPredefinedCellStyle:member(1)
  package: ExcelScript!
  fullName: getPredefinedCellStyle()
  summary: 表示当前区域的样式。 如果单元格的样式不一致，则返回 null。 对于自定义样式，将返回样式名称。 对于内置样式，将返回一个代表 BuiltInStyle 枚举中的值的字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPredefinedCellStyle(): string;'
    return:
      type: string
      description: ''
- name: getResizedRange(deltaRows, deltaColumns)
  uid: ExcelScript!ExcelScript.Range#getResizedRange:member(1)
  package: ExcelScript!
  fullName: getResizedRange(deltaRows, deltaColumns)
  summary: 获取与当前范围对象类似的范围对象，但其右下角可通过一定数量的行和列进行展开（或合拢）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getResizedRange(deltaRows: number, deltaColumns: number): Range;'
    parameters:
    - id: deltaRows
      description: 相对于当前范围，展开右下角的行数。使用正数可展开范围，使用负数可合拢范围。
      type: number
    - id: deltaColumns
      description: 相对于当前范围展开右下角的列数。 使用正数可展开范围，使用负数可合拢范围。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/**\n * This script copies the formatting in the active cell to the neighboring cells.\n * Note that this script only works when the active cell isn't on an edge of the worksheet.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the active cell.\n  let activeCell = workbook.getActiveCell();\n\n  // Get the cell that's one row above and one column to the left of the active cell.\n  let cornerCell = activeCell.getOffsetRange(-1,-1);\n\n  // Get a range that includes all the cells surrounding the active cell.\n  let surroundingRange = cornerCell.getResizedRange(2, 2)\n\n  // Copy the formatting from the active cell to the new range.\n  surroundingRange.copyFrom(\n    activeCell, /* The source range. */\n    ExcelScript.RangeCopyType.formats /* What to copy. */\n    );\n}\n```"
- name: getRow(row)
  uid: ExcelScript!ExcelScript.Range#getRow:member(1)
  package: ExcelScript!
  fullName: getRow(row)
  summary: 获取范围中包含的行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRow(row: number): Range;'
    parameters:
    - id: row
      description: 要检索的区域的行号。 从零开始编制索引。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getRowCount()
  uid: ExcelScript!ExcelScript.Range#getRowCount:member(1)
  package: ExcelScript!
  fullName: getRowCount()
  summary: 返回区域中的总行数。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowCount(): number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/**\n * This sample provides the count of negative numbers that are present\n * in the used range of the current worksheet.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the working range.\n  let usedRange = workbook.getActiveWorksheet().getUsedRange();\n  let rowCount = usedRange.getRowCount();\n  let columnCount = usedRange.getColumnCount();\n\n  // Save the values locally to avoid repeatedly asking the workbook.\n  let usedRangeValues = usedRange.getValues();\n\n  // Start the negative number counter.\n  let negativeCount = 0;\n\n  // Iterate over the entire range looking for negative numbers.\n  for (let i = 0; i < rowCount; i++) {\n    for (let j = 0; j < columnCount; j++) {\n      if (usedRangeValues[i][j] < 0) {\n        negativeCount++;\n      }\n    }\n  }\n\n  // Log the negative number count to the console.\n  console.log(negativeCount);\n}\n```"
- name: getRowHidden()
  uid: ExcelScript!ExcelScript.Range#getRowHidden:member(1)
  package: ExcelScript!
  fullName: getRowHidden()
  summary: 表示当前区域中的所有行是否隐藏。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowHidden(): boolean;'
    return:
      type: boolean
      description: ''
- name: getRowIndex()
  uid: ExcelScript!ExcelScript.Range#getRowIndex:member(1)
  package: ExcelScript!
  fullName: getRowIndex()
  summary: 返回区域中第一个单元格的行编号。 从零开始编制索引。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowIndex(): number;'
    return:
      type: number
      description: ''
- name: getRowsAbove(count)
  uid: ExcelScript!ExcelScript.Range#getRowsAbove:member(1)
  package: ExcelScript!
  fullName: getRowsAbove(count)
  summary: 获取当前范围对象上方的一定数量的行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowsAbove(count?: number): Range;'
    parameters:
    - id: count
      description: 可选。生成的范围中要包含的行数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getRowsBelow(count)
  uid: ExcelScript!ExcelScript.Range#getRowsBelow:member(1)
  package: ExcelScript!
  fullName: getRowsBelow(count)
  summary: 获取当前范围对象下方的一定数量的行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowsBelow(count?: number): Range;'
    parameters:
    - id: count
      description: 可选。生成的范围中要包含的行数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getSavedAsArray()
  uid: ExcelScript!ExcelScript.Range#getSavedAsArray:member(1)
  package: ExcelScript!
  fullName: getSavedAsArray()
  summary: 表示所有单元格是否将另存为数组公式。 如果 ALL 单元格将另存为数组公式，则返回 true;如果所有单元格不另存为数组公式，则返回 false。 如果某些单元格将另存为数组公式，而某些单元格不另存为数组公式，则返回 null。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSavedAsArray(): boolean;'
    return:
      type: boolean
      description: ''
- name: getSort()
  uid: ExcelScript!ExcelScript.Range#getSort:member(1)
  package: ExcelScript!
  fullName: getSort()
  summary: 表示当前 range 的区域排序。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSort(): RangeSort;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeSort:interface" />
      description: ''
- name: getSpecialCells(cellType, cellValueType)
  uid: ExcelScript!ExcelScript.Range#getSpecialCells:member(1)
  package: ExcelScript!
  fullName: getSpecialCells(cellType, cellValueType)
  summary: 获取包含一个或多个区域的 RangeAreas 对象，它表示匹配指定类型和值的所有单元格。 如果未找到特殊单元格，则此函数将返回其属性设置为 `isNullObject``true`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCells(
                  cellType: SpecialCellType,
                  cellValueType?: SpecialCellValueType
              ): RangeAreas;
    parameters:
    - id: cellType
      description: 要包含的单元格的类型。
      type: <xref uid="ExcelScript!ExcelScript.SpecialCellType:enum" />
    - id: cellValueType
      description: 如果 cellType 是常量或公式，则此参数用于确定结果中要包含的单元格类型。 这些值可以组合在一起以返回多个类型。 默认情况下，将选择所有常量或公式，无论类型如何。
      type: <xref uid="ExcelScript!ExcelScript.SpecialCellValueType:enum" />
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/**\n * This sample gets all the blank cells in the current worksheet's used range. It then highlights all those cells with a yellow background.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n    // Get the current used range.\n    let range = workbook.getActiveWorksheet().getUsedRange();\n    \n    // Get all the blank cells.\n    let blankCells = range.getSpecialCells(ExcelScript.SpecialCellType.blanks);\n    // Highlight the blank cells with a yellow background.\n    blankCells.getFormat().getFill().setColor(\"yellow\");\n}\n```"
- name: getSpillingToRange()
  uid: ExcelScript!ExcelScript.Range#getSpillingToRange:member(1)
  package: ExcelScript!
  fullName: getSpillingToRange()
  summary: 获取 Range 对象，它在调用定位单元格时包含溢出区域。 如果区域不是定位单元格或找不到溢出区域，则此函数将返回其属性设置为 `isNullObject``true`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSpillingToRange(): Range;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getSpillParent()
  uid: ExcelScript!ExcelScript.Range#getSpillParent:member(1)
  package: ExcelScript!
  fullName: getSpillParent()
  summary: 获取包含被溢出的单元格的定位单元格的 range 对象。 如果该对象不是溢出的单元格，或者给定了多个单元格，则此函数将返回其属性设置为 `isNullObject``true`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSpillParent(): Range;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getSurroundingRegion()
  uid: ExcelScript!ExcelScript.Range#getSurroundingRegion:member(1)
  package: ExcelScript!
  fullName: getSurroundingRegion()
  summary: 返回一个 Range 对象，该对象表示此区域左上单元格的周围区域。 周围区域是由相对于该区域的空白行和空白列的任何组合所限定的区域。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSurroundingRegion(): Range;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getTables(fullyContained)
  uid: ExcelScript!ExcelScript.Range#getTables:member(1)
  package: ExcelScript!
  fullName: getTables(fullyContained)
  summary: 获取与区域重叠的限定范围的表格集合。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTables(fullyContained?: boolean): Table[];'
    parameters:
    - id: fullyContained
      description: 如果为 true，则仅返回完全包含在区域边界内的表。 默认值为 false。
      type: boolean
    return:
      type: <xref uid="ExcelScript!ExcelScript.Table:interface" />[]
      description: ''
- name: getText()
  uid: ExcelScript!ExcelScript.Range#getText:member(1)
  package: ExcelScript!
  fullName: getText()
  summary: 表示指定区域的文本值。 文本值与单元格宽度无关。 在 \# Excel UI 中发生的符号替换不会影响 API 返回的文本值。 如果区域包含多个单元格，则返回第一个单元格区域 (由行索引 0 和列索引 0 表示的数据) 0。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getText(): string;'
    return:
      type: string
      description: ''
- name: getTexts()
  uid: ExcelScript!ExcelScript.Range#getTexts:member(1)
  package: ExcelScript!
  fullName: getTexts()
  summary: 指定区域的文本值。 文本值与单元格宽度无关。 在 \# Excel UI 中发生的符号替换不会影响 API 返回的文本值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTexts(): string[][];'
    return:
      type: string[][]
      description: ''
- name: getTop()
  uid: ExcelScript!ExcelScript.Range#getTop:member(1)
  package: ExcelScript!
  fullName: getTop()
  summary: 返回从工作表的上边缘到区域的上边缘的 100％ 缩放的距离（以磅为单位）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTop(): number;'
    return:
      type: number
      description: ''
- name: getUsedRange(valuesOnly)
  uid: ExcelScript!ExcelScript.Range#getUsedRange:member(1)
  package: ExcelScript!
  fullName: getUsedRange(valuesOnly)
  summary: 返回指定 range 对象的所用区域。 如果区域内没有已使用的单元格，则此函数将返回其属性设置为 `isNullObject``true`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRange(valuesOnly?: boolean): Range;'
    parameters:
    - id: valuesOnly
      description: 仅将有值的单元格视为已使用的单元格。
      type: boolean
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getValue()
  uid: ExcelScript!ExcelScript.Range#getValue:member(1)
  package: ExcelScript!
  fullName: getValue()
  summary: 表示指定区域的原始值。 返回的数据可能是字符串、数字，也可能是布尔值。 包含错误的单元格将返回错误字符串。 如果区域包含多个单元格，则返回第一个单元格区域 (由行索引 0 和列索引 0 表示的数据) 0。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getValue(): string | number | boolean;'
    return:
      type: string | number | boolean
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/**\n * This sample reads the value of A1 and prints it to the console.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the current worksheet.\n  let selectedSheet = workbook.getActiveWorksheet();\n\n  // Get the value of cell A1.\n  let range = selectedSheet.getRange(\"A1\");\n  \n  // Print the value of A1.\n  console.log(range.getValue());\n}\n```"
- name: getValues()
  uid: ExcelScript!ExcelScript.Range#getValues:member(1)
  package: ExcelScript!
  fullName: getValues()
  summary: 表示指定区域的原始值。 返回的数据可能是字符串、数字，也可能是布尔值。 包含错误的单元格将返回错误字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getValues(): (string | number | boolean)[][];'
    return:
      type: (string | number | boolean)[][]
      description: ''
- name: getValueType()
  uid: ExcelScript!ExcelScript.Range#getValueType:member(1)
  package: ExcelScript!
  fullName: getValueType()
  summary: 表示单元格中的数据类型。 如果区域包含多个单元格，则返回第一个单元格区域 (由行索引 0 和列索引 0 表示的数据) 0。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getValueType(): RangeValueType;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeValueType:enum" />
      description: ''
- name: getValueTypes()
  uid: ExcelScript!ExcelScript.Range#getValueTypes:member(1)
  package: ExcelScript!
  fullName: getValueTypes()
  summary: 指定每个单元格中的数据类型。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getValueTypes(): RangeValueType[][];'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeValueType:enum" />[][]
      description: ''
- name: getVisibleView()
  uid: ExcelScript!ExcelScript.Range#getVisibleView:member(1)
  package: ExcelScript!
  fullName: getVisibleView()
  summary: 表示当前 range 对象的可见行。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getVisibleView(): RangeView;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeView:interface" />
      description: ''
- name: getWidth()
  uid: ExcelScript!ExcelScript.Range#getWidth:member(1)
  package: ExcelScript!
  fullName: getWidth()
  summary: 返回从区域的左边缘到区域的右边缘的 100％ 缩放的距离（以磅为单位）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getWidth(): number;'
    return:
      type: number
      description: ''
- name: getWorksheet()
  uid: ExcelScript!ExcelScript.Range#getWorksheet:member(1)
  package: ExcelScript!
  fullName: getWorksheet()
  summary: 包含当前区域的工作表。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getWorksheet(): Worksheet;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Worksheet:interface" />
      description: ''
- name: group(groupOption)
  uid: ExcelScript!ExcelScript.Range#group:member(1)
  package: ExcelScript!
  fullName: group(groupOption)
  summary: 对大纲的列和行进行分组。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'group(groupOption: GroupOption): void;'
    parameters:
    - id: groupOption
      description: 指定如何按行或列对区域进行分组。 当组选项与区域或属性不同时，将引发错误 (即为 `InvalidArgument` `isEntireRow` `isEntireColumn` `range.isEntireRow` true，为 `groupOption` "ByColumns"或 true 且为 `range.isEntireColumn` `groupOption` "ByRows") 。
      type: <xref uid="ExcelScript!ExcelScript.GroupOption:enum" />
    return:
      type: void
      description: ''
- name: hideGroupDetails(groupOption)
  uid: ExcelScript!ExcelScript.Range#hideGroupDetails:member(1)
  package: ExcelScript!
  fullName: hideGroupDetails(groupOption)
  summary: 隐藏行或列组的详细信息。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'hideGroupDetails(groupOption: GroupOption): void;'
    parameters:
    - id: groupOption
      description: 指定是否隐藏分组行或分组列的详细信息。
      type: <xref uid="ExcelScript!ExcelScript.GroupOption:enum" />
    return:
      type: void
      description: ''
- name: insert(shift)
  uid: ExcelScript!ExcelScript.Range#insert:member(1)
  package: ExcelScript!
  fullName: insert(shift)
  summary: 将单个单元格或一系列单元格插入到工作表中取代此区域，并移动其他单元格以留出空间。在现在空白的空间返回新的 Range 对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insert(shift: InsertShiftDirection): Range;'
    parameters:
    - id: shift
      description: 指定移动单元格的方式。 有关详细信息，请参阅 ExcelScript.InsertShiftDirection。
      type: <xref uid="ExcelScript!ExcelScript.InsertShiftDirection:enum" />
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: merge(across)
  uid: ExcelScript!ExcelScript.Range#merge:member(1)
  package: ExcelScript!
  fullName: merge(across)
  summary: 将范围单元格合并到工作表的一个区域内。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'merge(across?: boolean): void;'
    parameters:
    - id: across
      description: 可选。 如果为 True，则将指定区域中每一行的单元格合并为一个单独的合并单元格。 默认值是 false。
      type: boolean
    return:
      type: void
      description: ''
- name: moveTo(destinationRange)
  uid: ExcelScript!ExcelScript.Range#moveTo:member(1)
  package: ExcelScript!
  fullName: moveTo(destinationRange)
  summary: 将单元格值、格式设置和公式从当前区域移动到目标区域，替换这些单元格中的旧信息。 如果目标区域小于当前范围，则会自动扩展该范围。 不会更改目标区域中原始区域之外的任何单元格。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'moveTo(destinationRange: Range | string): void;'
    parameters:
    - id: destinationRange
      description: destinationRange 指定将在此范围中信息移动到的范围。
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" /> | string
    return:
      type: void
      description: ''
- name: removeDuplicates(columns, includesHeader)
  uid: ExcelScript!ExcelScript.Range#removeDuplicates:member(1)
  package: ExcelScript!
  fullName: removeDuplicates(columns, includesHeader)
  summary: 从列指定的区域中删除重复值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      removeDuplicates(
                  columns: number[],
                  includesHeader: boolean
              ): RemoveDuplicatesResult;
    parameters:
    - id: columns
      description: 区域内可能包含重复项的列。 至少需要指定一列。 从零开始编制索引。
      type: number[]
    - id: includesHeader
      description: 如此 如果输入数据包含标头。 默认为 false。
      type: boolean
    return:
      type: <xref uid="ExcelScript!ExcelScript.RemoveDuplicatesResult:interface" />
      description: ''
- name: replaceAll(text, replacement, criteria)
  uid: ExcelScript!ExcelScript.Range#replaceAll:member(1)
  package: ExcelScript!
  fullName: replaceAll(text, replacement, criteria)
  summary: 根据当前区域内指定的条件查找并替换给定的字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      replaceAll(
                  text: string,
                  replacement: string,
                  criteria: ReplaceCriteria
              ): number;
    parameters:
    - id: text
      description: 要查找的字符串。
      type: string
    - id: replacement
      description: 要替换为原始字符串。
      type: string
    - id: criteria
      description: 其他替换条件。
      type: <xref uid="ExcelScript!ExcelScript.ReplaceCriteria:interface" />
    return:
      type: number
      description: ''
- name: select()
  uid: ExcelScript!ExcelScript.Range#select:member(1)
  package: ExcelScript!
  fullName: select()
  summary: 在 Excel UI 中选择指定的区域。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(): void;'
    return:
      type: void
      description: ''
- name: setColumnHidden(columnHidden)
  uid: ExcelScript!ExcelScript.Range#setColumnHidden:member(1)
  package: ExcelScript!
  fullName: setColumnHidden(columnHidden)
  summary: 表示当前区域中的所有列是否隐藏。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setColumnHidden(columnHidden: boolean): void;'
    parameters:
    - id: columnHidden
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setDirty()
  uid: ExcelScript!ExcelScript.Range#setDirty:member(1)
  package: ExcelScript!
  fullName: setDirty()
  summary: 设置下一次重新计算发生时要重新计算的区域。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDirty(): void;'
    return:
      type: void
      description: ''
- name: setFormula(formula)
  uid: ExcelScript!ExcelScript.Range#setFormula:member(1)
  package: ExcelScript!
  fullName: setFormula(formula)
  summary: 使用 A1 样式表示法设置单元格公式。 如果区域包含多个单元格，则给定区域的每个单元格都将使用输入数据进行更新。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setFormula(formula: string): void;'
    parameters:
    - id: formula
      description: ''
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/*\n * This script sets a cell's formula, \n * then displays how Excel stores the cell's formula and value separately.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  let selectedSheet = workbook.getActiveWorksheet();\n\n  // Set A1 to 2.\n  let a1 = selectedSheet.getRange(\"A1\");\n  a1.setValue(2);\n\n  // Set B1 to the formula =(2*A1), which should equal 4.\n  let b1 = selectedSheet.getRange(\"B1\")\n  b1.setFormula(\"=(2*A1)\");\n\n  // Log the current results for `getFormula` and `getValue` at B1.\n  console.log(`B1 - Formula: ${b1.getFormula()} | Value: ${b1.getValue()}`);\n}\n```"
- name: setFormulaLocal(formulaLocal)
  uid: ExcelScript!ExcelScript.Range#setFormulaLocal:member(1)
  package: ExcelScript!
  fullName: setFormulaLocal(formulaLocal)
  summary: 使用用户的语言和数字格式区域设置 A1 样式表示法的单元格公式。 例如，英语中的公式 "=SUM(A1, 1.5)" 在德语中将变为 "=SUMME(A1; 1,5)"。 如果区域包含多个单元格，则给定区域的每个单元格都将使用输入数据进行更新。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setFormulaLocal(formulaLocal: string): void;'
    parameters:
    - id: formulaLocal
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setFormulaR1C1(formulaR1C1)
  uid: ExcelScript!ExcelScript.Range#setFormulaR1C1:member(1)
  package: ExcelScript!
  fullName: setFormulaR1C1(formulaR1C1)
  summary: 使用 R1C1 样式表示法设置单元格公式。 如果区域包含多个单元格，则给定区域的每个单元格都将使用输入数据进行更新。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setFormulaR1C1(formulaR1C1: string): void;'
    parameters:
    - id: formulaR1C1
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setFormulas(formulas)
  uid: ExcelScript!ExcelScript.Range#setFormulas:member(1)
  package: ExcelScript!
  fullName: setFormulas(formulas)
  summary: 表示采用 A1 表示法的公式。 如果单元格没有公式，则改为返回其值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setFormulas(formulas: string[][]): void;'
    parameters:
    - id: formulas
      description: ''
      type: string[][]
    return:
      type: void
      description: ''
- name: setFormulasLocal(formulasLocal)
  uid: ExcelScript!ExcelScript.Range#setFormulasLocal:member(1)
  package: ExcelScript!
  fullName: setFormulasLocal(formulasLocal)
  summary: 表示采用 A1 样式表示法的公式，使用用户的语言和数字格式区域设置。 例如，英语中的公式 "=SUM(A1, 1.5)" 在德语中将变为 "=SUMME(A1; 1,5)"。 如果单元格没有公式，则改为返回其值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setFormulasLocal(formulasLocal: string[][]): void;'
    parameters:
    - id: formulasLocal
      description: ''
      type: string[][]
    return:
      type: void
      description: ''
- name: setFormulasR1C1(formulasR1C1)
  uid: ExcelScript!ExcelScript.Range#setFormulasR1C1:member(1)
  package: ExcelScript!
  fullName: setFormulasR1C1(formulasR1C1)
  summary: 表示采用 R1C1 样式表示法的公式。 如果单元格没有公式，则改为返回其值。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setFormulasR1C1(formulasR1C1: string[][]): void;'
    parameters:
    - id: formulasR1C1
      description: ''
      type: string[][]
    return:
      type: void
      description: ''
- name: setHyperlink(hyperlink)
  uid: ExcelScript!ExcelScript.Range#setHyperlink:member(1)
  package: ExcelScript!
  fullName: setHyperlink(hyperlink)
  summary: 表示当前范围的超链接。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setHyperlink(hyperlink: RangeHyperlink): void;'
    parameters:
    - id: hyperlink
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.RangeHyperlink:interface" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/** \n * This script inserts a hyperlink to the first cell of the last worksheet in the workbook.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the active cell.\n  let cell = workbook.getActiveCell();\n\n  // Get the last worksheet in the workbook.\n  // Note that this might be the current sheet if there's only one worksheet.\n  let lastSheet = workbook.getLastWorksheet();\n\n  // Get sheet name. \n  let linkedSheetName = lastSheet.getName();\n  console.log(`Setting hyperlink of ${cell.getAddress()} to the ${linkedSheetName} sheet's A1 cell`);\n\n  // Set the text for the hyperlink.\n  let value = `Click to go to: ${linkedSheetName}`;\n\n  // Create the hyperlink using that cell's value.\n  cell.setHyperlink({\n    textToDisplay: value.toString(),\n    screenTip: `Navigate to ${linkedSheetName}`,\n    documentReference: `${linkedSheetName}!A1`\n  });\n}\n```"
- name: setNumberFormat(numberFormat)
  uid: ExcelScript!ExcelScript.Range#setNumberFormat:member(1)
  package: ExcelScript!
  fullName: setNumberFormat(numberFormat)
  summary: 设置给定范围的单元格 Excel 数字格式代码。 如果区域包含多个单元格，则给定区域的每个单元格都将使用输入数据进行更新。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setNumberFormat(numberFormat: string): void;'
    parameters:
    - id: numberFormat
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setNumberFormatLocal(numberFormatLocal)
  uid: ExcelScript!ExcelScript.Range#setNumberFormatLocal:member(1)
  package: ExcelScript!
  fullName: setNumberFormatLocal(numberFormatLocal)
  summary: 根据用户的语言设置设置给定范围的单元格 Excel 数字格式代码。 Excel 在获取或设置属性时不执行任何语言或格式 `numberFormatLocal` 强制转换。 任何返回的文本都使用基于系统设置中指定的语言的本地格式的字符串。 如果区域包含多个单元格，则给定区域的每个单元格都将使用输入数据进行更新。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setNumberFormatLocal(numberFormatLocal: string): void;'
    parameters:
    - id: numberFormatLocal
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setNumberFormats(numberFormats)
  uid: ExcelScript!ExcelScript.Range#setNumberFormats:member(1)
  package: ExcelScript!
  fullName: setNumberFormats(numberFormats)
  summary: 表示给定范围的 Excel 数字格式代码。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setNumberFormats(numberFormats: string[][]): void;'
    parameters:
    - id: numberFormats
      description: ''
      type: string[][]
    return:
      type: void
      description: ''
- name: setNumberFormatsLocal(numberFormatsLocal)
  uid: ExcelScript!ExcelScript.Range#setNumberFormatsLocal:member(1)
  package: ExcelScript!
  fullName: setNumberFormatsLocal(numberFormatsLocal)
  summary: 表示基于用户的语言设置的给定范围的 Excel 号码格式代码。 Excel 在获取或设置属性时不执行任何语言或格式 `numberFormatLocal` 强制转换。 任何返回的文本都使用基于系统设置中指定的语言的本地格式的字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setNumberFormatsLocal(numberFormatsLocal: string[][]): void;'
    parameters:
    - id: numberFormatsLocal
      description: ''
      type: string[][]
    return:
      type: void
      description: ''
- name: setPredefinedCellStyle(predefinedCellStyle)
  uid: ExcelScript!ExcelScript.Range#setPredefinedCellStyle:member(1)
  package: ExcelScript!
  fullName: setPredefinedCellStyle(predefinedCellStyle)
  summary: 表示当前区域的样式。 如果单元格的样式不一致，则返回 null。 对于自定义样式，将返回样式名称。 对于内置样式，将返回一个代表 BuiltInStyle 枚举中的值的字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPredefinedCellStyle(predefinedCellStyle: string): void;'
    parameters:
    - id: predefinedCellStyle
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setRowHidden(rowHidden)
  uid: ExcelScript!ExcelScript.Range#setRowHidden:member(1)
  package: ExcelScript!
  fullName: setRowHidden(rowHidden)
  summary: 表示当前区域中的所有行是否隐藏。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setRowHidden(rowHidden: boolean): void;'
    parameters:
    - id: rowHidden
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setValue(value)
  uid: ExcelScript!ExcelScript.Range#setValue:member(1)
  package: ExcelScript!
  fullName: setValue(value)
  summary: 设置指定区域的原始值。 要设置的数据的类型可以是字符串、数字或布尔值。 `null` 值将在 Excel (中设置或覆盖时) 。 如果区域包含多个单元格，则给定区域的每个单元格都将使用输入数据进行更新。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setValue(value: any): void;'
    parameters:
    - id: value
      description: ''
      type: any
    return:
      type: void
      description: ''
- name: setValues(values)
  uid: ExcelScript!ExcelScript.Range#setValues:member(1)
  package: ExcelScript!
  fullName: setValues(values)
  summary: 表示指定区域的原始值。 返回的数据可能是字符串、数字，也可能是布尔值。 包含错误的单元格将返回错误字符串。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setValues(values: (string | number | boolean)[][]): void;'
    parameters:
    - id: values
      description: ''
      type: (string | number | boolean)[][]
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n/**\n * This sample inserts some pre-loaded data into a range.\n * It also shows how to get a range that fits the data.\n */\n function main(workbook: ExcelScript.Workbook) {\n   // Get the active cell.\n   let currentCell = workbook.getActiveCell();\n   \n   // Calculate the range needed to fit the given data.\n   let targetRange = currentCell.getResizedRange(DATA.length - 1, DATA[0].length - 1);\n\n   // Set range values to the data.\n   targetRange.setValues(DATA);\n\n   // Autofit the columns so the worksheet is readable. \n   targetRange.getFormat().autofitColumns();\n }\n\n /* \n  * This sample's data is in a static 2-dimensional array.\n  * You could also get the input from other ranges or sources.\n  * Note that each row must have the same number of columns to be valid. \n  */\n const DATA = [\n   ['Date', 'Salesperson', 'Product', 'Amount']\n   , ['3/2/2020', 'Anne', 'Pizza', '$1400']\n   , ['3/2/2020', 'Mariya', 'Pizza', '$1700']\n   , ['3/7/2020', 'Mark', 'Sandwiches', '$1010']\n   , ['3/24/2020', 'Anne', 'Pizza', '$750']\n   , ['3/28/2020', 'Mark', 'Salads', '$510']\n   , ['4/17/2020', 'Laura', 'Salads', '$900']\n   , ['4/17/2020', 'Mariya', 'Salads', '$1600']\n   , ['4/28/2020', 'Laura', 'Sandwiches', '$680']\n ];\n```"
- name: showCard()
  uid: ExcelScript!ExcelScript.Range#showCard:member(1)
  package: ExcelScript!
  fullName: showCard()
  summary: 显示活动单元格的卡片（如果该单元格具有富值内容）。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showCard(): void;'
    return:
      type: void
      description: ''
- name: showGroupDetails(groupOption)
  uid: ExcelScript!ExcelScript.Range#showGroupDetails:member(1)
  package: ExcelScript!
  fullName: showGroupDetails(groupOption)
  summary: 显示行或列组的详细信息。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showGroupDetails(groupOption: GroupOption): void;'
    parameters:
    - id: groupOption
      description: 指定是显示分组行的详细信息还是分组列的详细信息。
      type: <xref uid="ExcelScript!ExcelScript.GroupOption:enum" />
    return:
      type: void
      description: ''
- name: ungroup(groupOption)
  uid: ExcelScript!ExcelScript.Range#ungroup:member(1)
  package: ExcelScript!
  fullName: ungroup(groupOption)
  summary: 取消大纲的列和行的组。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'ungroup(groupOption: GroupOption): void;'
    parameters:
    - id: groupOption
      description: 指定如何按行或列取消区域组合。
      type: <xref uid="ExcelScript!ExcelScript.GroupOption:enum" />
    return:
      type: void
      description: ''
- name: unmerge()
  uid: ExcelScript!ExcelScript.Range#unmerge:member(1)
  package: ExcelScript!
  fullName: unmerge()
  summary: 将范围单元格取消合并为各个单元格。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'unmerge(): void;'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 8f16fa6c9b84bdd42fd68e8d9be7402164c40531
  ms.sourcegitcommit: 2166f15e1168b1b453872c5840431e960dc909df
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 01/08/2021
  ms.locfileid: "49784455"
