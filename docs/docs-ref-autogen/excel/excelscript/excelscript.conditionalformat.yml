### YamlMime:TSType
name: ExcelScript.ConditionalFormat
uid: ExcelScript!ExcelScript.ConditionalFormat:interface
package: ExcelScript!
fullName: ExcelScript.ConditionalFormat
summary: 封装条件格式的范围、格式、规则和其他属性的对象。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: delete()
  uid: ExcelScript!ExcelScript.ConditionalFormat#delete:member(1)
  package: ExcelScript!
  fullName: delete()
  summary: 删除此条件格式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: ''
- name: getCellValue()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getCellValue:member(1)
  package: ExcelScript!
  fullName: getCellValue()
  summary: 如果当前条件格式为 `CellValue` 类型，则返回单元格值条件格式属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCellValue(): CellValueConditionalFormat | undefined;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.CellValueConditionalFormat:interface" /> | undefined
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```TypeScript\n/**\n * This script applies conditional formatting to a range.\n * That formatting is conditional upon the cell's numerical value.\n * Any value between 50 and 75 will have the cell fill color changed and the font made italic.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the range to format.\n  const sheet = workbook.getActiveWorksheet();\n  const ratingColumn = sheet.getRange(\"D2:D20\");\n\n  // Add cell value conditional formatting.\n  const cellValueConditionalFormatting =\n    ratingColumn.addConditionalFormat(ExcelScript.ConditionalFormatType.cellValue).getCellValue();\n  \n  // Create the condition, in this case when the cell value is between 50 and 75.\n  let rule: ExcelScript.ConditionalCellValueRule = {\n    formula1: \"50\",\n    formula2: \"75\",\n    operator: ExcelScript.ConditionalCellValueOperator.between\n  };\n  cellValueConditionalFormatting.setRule(rule);\n\n  // Set the format to apply when the condition is met.\n  let format = cellValueConditionalFormatting.getFormat();\n  format.getFill().setColor(\"yellow\");\n  format.getFont().setItalic(true);\n\n}\n```"
- name: getColorScale()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getColorScale:member(1)
  package: ExcelScript!
  fullName: getColorScale()
  summary: 如果当前条件格式为 `ColorScale` 类型，则返回颜色缩放条件格式属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColorScale(): ColorScaleConditionalFormat | undefined;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ColorScaleConditionalFormat:interface" /> | undefined
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```TypeScript\n/**\n * This script applies a red, white, and blue color scale to the selected range.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the selected range.\n  let selectedRange = workbook.getSelectedRange();\n\n  // Create a new conditional formatting object by adding one to the range.\n  let conditionalFormatting = selectedRange.addConditionalFormat(ExcelScript.ConditionalFormatType.colorScale);\n\n  // Set the colors for the three parts of the scale: minimum, midpoint, and maximum.\n  conditionalFormatting.getColorScale().setCriteria({\n    minimum: {\n      color:\"#F8696B\", /* A pale red. */\n      type:ExcelScript.ConditionalFormatColorCriterionType.lowestValue\n    },\n    midpoint: {\n      color: \"#FCFCFF\", /* Slightly off-white. */\n      formula:'=50',type:ExcelScript.ConditionalFormatColorCriterionType.percentile\n    },\n    maximum: {\n      color: \"#5A8AC6\", /* A pale blue. */\n      type:ExcelScript.ConditionalFormatColorCriterionType.highestValue\n    }\n  });\n}\n```"
- name: getCustom()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getCustom:member(1)
  package: ExcelScript!
  fullName: getCustom()
  summary: 如果当前条件格式是自定义类型，则返回自定义条件格式属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCustom(): CustomConditionalFormat | undefined;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.CustomConditionalFormat:interface" /> | undefined
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```TypeScript\n/**\n * This script applies a custom conditional formatting to the selected range.\n * A light-green fill is applied to a cell if the value is larger than the value in the row's previous column.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the selected cells.\n  let selectedRange = workbook.getSelectedRange();\n\n  // Apply a rule for positive change from the previous column.\n  let positiveChange = selectedRange.addConditionalFormat(ExcelScript.ConditionalFormatType.custom);\n  positiveChange.getCustom().getFormat().getFill().setColor(\"lightgreen\");\n  positiveChange.getCustom().getRule().setFormula(`=${selectedRange.getCell(0, 0).getAddress()}>${selectedRange.getOffsetRange(0, -1).getCell(0, 0).getAddress()}`);\n}\n```"
- name: getDataBar()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getDataBar:member(1)
  package: ExcelScript!
  fullName: getDataBar()
  summary: 如果当前条件格式是数据栏，则返回数据栏属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDataBar(): DataBarConditionalFormat | undefined;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.DataBarConditionalFormat:interface" /> | undefined
      description: ''
- name: getIconSet()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getIconSet:member(1)
  package: ExcelScript!
  fullName: getIconSet()
  summary: 如果当前条件格式为 `IconSet` 类型，则返回图标集条件格式属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIconSet(): IconSetConditionalFormat | undefined;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.IconSetConditionalFormat:interface" /> | undefined
      description: ''
- name: getId()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getId:member(1)
  package: ExcelScript!
  fullName: getId()
  summary: 当前条件格式的优先级 `ConditionalFormatCollection`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getId(): string;'
    return:
      type: string
      description: ''
- name: getPreset()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getPreset:member(1)
  package: ExcelScript!
  fullName: getPreset()
  summary: 返回预设条件条件格式。 有关详细信息，请参阅 `ExcelScript.PresetCriteriaConditionalFormat`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPreset(): PresetCriteriaConditionalFormat | undefined;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.PresetCriteriaConditionalFormat:interface" /> | undefined
      description: ''
- name: getPriority()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getPriority:member(1)
  package: ExcelScript!
  fullName: getPriority()
  summary: 此条件格式当前存在的条件格式集合中的优先级 (或索引) 。 更改此项还会更改其他条件格式的优先级，以允许连续的优先级顺序。 使用负优先级从后面开始。 如果优先级为负) ，则大于边界的优先级将被设置为最大 (或最小值。 另请注意，如果更改优先级，如果要对其进行进一步更改，则必须在该新优先级位置重新提取对象的新副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPriority(): number;'
    return:
      type: number
      description: ''
- name: getRange()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getRange:member(1)
  package: ExcelScript!
  fullName: getRange()
  summary: 返回应用条件格式的范围。 如果条件格式应用于多个范围，则此方法返回 `undefined`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Range;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />
      description: ''
- name: getRanges()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getRanges:member(1)
  package: ExcelScript!
  fullName: getRanges()
  summary: 返回 `RangeAreas`<!-- -->，包括一个或多个矩形范围，其中应用了条件格式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRanges(): RangeAreas;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />
      description: ''
- name: getStopIfTrue()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getStopIfTrue:member(1)
  package: ExcelScript!
  fullName: getStopIfTrue()
  summary: 如果满足此条件格式的条件，则不会有任何低优先级格式应在此单元格上生效。 值位于 `null` 数据条、图标集和颜色刻度上，因为没有这些概念 `StopIfTrue` 。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getStopIfTrue(): boolean;'
    return:
      type: boolean
      description: ''
- name: getTextComparison()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getTextComparison:member(1)
  package: ExcelScript!
  fullName: getTextComparison()
  summary: 如果当前条件格式是文本类型，则返回特定的文本条件格式属性。 例如，设置与单词“Text”匹配的单元格的格式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTextComparison(): TextConditionalFormat | undefined;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.TextConditionalFormat:interface" /> | undefined
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```TypeScript\n/**\n * This script adds conditional formatting to the first column in the worksheet.\n * This formatting gives the cells a green fill if they have text starting with \"Excel\".\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the first column in the current worksheet.\n  const currentSheet = workbook.getActiveWorksheet();\n  const firstColumn = currentSheet.getRange(\"A:A\");\n\n  // Add conditional formatting based on the text in the cells.\n  const textConditionFormat = \n    firstColumn.addConditionalFormat(ExcelScript.ConditionalFormatType.containsText).getTextComparison();\n\n  // Set the conditional format to provide a green fill.\n  textConditionFormat.getFormat().getFill().setColor(\"green\");\n\n  // Apply the condition rule that the text begins with \"Excel\".\n  const textRule: ExcelScript.ConditionalTextComparisonRule = {\n    operator: ExcelScript.ConditionalTextOperator.beginsWith,\n    text: \"Excel\"\n  };\n  textConditionFormat.setRule(textRule);\n}\n```"
- name: getTopBottom()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getTopBottom:member(1)
  package: ExcelScript!
  fullName: getTopBottom()
  summary: 如果当前条件格式为 `TopBottom` 类型，则返回顶部/底部条件格式属性。 例如，设置前 10% 或下 10 项的格式。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTopBottom(): TopBottomConditionalFormat | undefined;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.TopBottomConditionalFormat:interface" /> | undefined
      description: ''
- name: getType()
  uid: ExcelScript!ExcelScript.ConditionalFormat#getType:member(1)
  package: ExcelScript!
  fullName: getType()
  summary: 条件格式的类型。 一次只能设置一个。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getType(): ConditionalFormatType;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ConditionalFormatType:enum" />
      description: ''
- name: setPriority(priority)
  uid: ExcelScript!ExcelScript.ConditionalFormat#setPriority:member(1)
  package: ExcelScript!
  fullName: setPriority(priority)
  summary: 此条件格式当前存在的条件格式集合中的优先级 (或索引) 。 更改此项还会更改其他条件格式的优先级，以允许连续的优先级顺序。 使用负优先级从后面开始。 如果优先级为负) ，则大于边界的优先级将被设置为最大 (或最小值。 另请注意，如果更改优先级，如果要对其进行进一步更改，则必须在该新优先级位置重新提取对象的新副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPriority(priority: number): void;'
    parameters:
    - id: priority
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setStopIfTrue(stopIfTrue)
  uid: ExcelScript!ExcelScript.ConditionalFormat#setStopIfTrue:member(1)
  package: ExcelScript!
  fullName: setStopIfTrue(stopIfTrue)
  summary: 如果满足此条件格式的条件，则不会有任何低优先级格式应在此单元格上生效。 值位于 `null` 数据条、图标集和颜色刻度上，因为没有这些概念 `StopIfTrue` 。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setStopIfTrue(stopIfTrue: boolean): void;'
    parameters:
    - id: stopIfTrue
      description: ''
      type: boolean
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 7c9b7f9b1fb7350f3fb52bdd04d0bdef985cd8b1
  ms.sourcegitcommit: e4d007e5b8fa836727fe0419950ff22d5edc2384
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 08/24/2022
  ms.locfileid: "67423894"
